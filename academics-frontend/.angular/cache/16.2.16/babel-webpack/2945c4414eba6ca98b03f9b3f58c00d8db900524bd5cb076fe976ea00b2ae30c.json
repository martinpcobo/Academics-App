{"ast":null,"code":"import _asyncToGenerator from \"/Users/martin.perez.cobo/Documents/Repositories/Academics-FrontEnd/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n// src/webauthn-json/base64url.ts\nfunction base64urlToBuffer(baseurl64String) {\n  const padding = \"==\".slice(0, (4 - baseurl64String.length % 4) % 4);\n  const base64String = baseurl64String.replace(/-/g, \"+\").replace(/_/g, \"/\") + padding;\n  const str = atob(base64String);\n  const buffer = new ArrayBuffer(str.length);\n  const byteView = new Uint8Array(buffer);\n  for (let i = 0; i < str.length; i++) {\n    byteView[i] = str.charCodeAt(i);\n  }\n  return buffer;\n}\nfunction bufferToBase64url(buffer) {\n  const byteView = new Uint8Array(buffer);\n  let str = \"\";\n  for (const charCode of byteView) {\n    str += String.fromCharCode(charCode);\n  }\n  const base64String = btoa(str);\n  const base64urlString = base64String.replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=/g, \"\");\n  return base64urlString;\n}\n\n// src/webauthn-json/convert.ts\nvar copyValue = \"copy\";\nvar convertValue = \"convert\";\nfunction convert(conversionFn, schema2, input) {\n  if (schema2 === copyValue) {\n    return input;\n  }\n  if (schema2 === convertValue) {\n    return conversionFn(input);\n  }\n  if (schema2 instanceof Array) {\n    return input.map(v => convert(conversionFn, schema2[0], v));\n  }\n  if (schema2 instanceof Object) {\n    const output = {};\n    for (const [key, schemaField] of Object.entries(schema2)) {\n      if (schemaField.derive) {\n        const v = schemaField.derive(input);\n        if (v !== void 0) {\n          input[key] = v;\n        }\n      }\n      if (!(key in input)) {\n        if (schemaField.required) {\n          throw new Error(`Missing key: ${key}`);\n        }\n        continue;\n      }\n      if (input[key] == null) {\n        output[key] = null;\n        continue;\n      }\n      output[key] = convert(conversionFn, schemaField.schema, input[key]);\n    }\n    return output;\n  }\n}\nfunction derived(schema2, derive) {\n  return {\n    required: true,\n    schema: schema2,\n    derive\n  };\n}\nfunction required(schema2) {\n  return {\n    required: true,\n    schema: schema2\n  };\n}\nfunction optional(schema2) {\n  return {\n    required: false,\n    schema: schema2\n  };\n}\n\n// src/webauthn-json/basic/schema.ts\nvar publicKeyCredentialDescriptorSchema = {\n  type: required(copyValue),\n  id: required(convertValue),\n  transports: optional(copyValue)\n};\nvar simplifiedExtensionsSchema = {\n  appid: optional(copyValue),\n  appidExclude: optional(copyValue),\n  credProps: optional(copyValue)\n};\nvar simplifiedClientExtensionResultsSchema = {\n  appid: optional(copyValue),\n  appidExclude: optional(copyValue),\n  credProps: optional(copyValue)\n};\nvar credentialCreationOptions = {\n  publicKey: required({\n    rp: required(copyValue),\n    user: required({\n      id: required(convertValue),\n      name: required(copyValue),\n      displayName: required(copyValue)\n    }),\n    challenge: required(convertValue),\n    pubKeyCredParams: required(copyValue),\n    timeout: optional(copyValue),\n    excludeCredentials: optional([publicKeyCredentialDescriptorSchema]),\n    authenticatorSelection: optional(copyValue),\n    attestation: optional(copyValue),\n    extensions: optional(simplifiedExtensionsSchema)\n  }),\n  signal: optional(copyValue)\n};\nvar publicKeyCredentialWithAttestation = {\n  type: required(copyValue),\n  id: required(copyValue),\n  rawId: required(convertValue),\n  authenticatorAttachment: optional(copyValue),\n  response: required({\n    clientDataJSON: required(convertValue),\n    attestationObject: required(convertValue),\n    transports: derived(copyValue, response => {\n      var _a;\n      return ((_a = response.getTransports) == null ? void 0 : _a.call(response)) || [];\n    })\n  }),\n  clientExtensionResults: derived(simplifiedClientExtensionResultsSchema, pkc => pkc.getClientExtensionResults())\n};\nvar credentialRequestOptions = {\n  mediation: optional(copyValue),\n  publicKey: required({\n    challenge: required(convertValue),\n    timeout: optional(copyValue),\n    rpId: optional(copyValue),\n    allowCredentials: optional([publicKeyCredentialDescriptorSchema]),\n    userVerification: optional(copyValue),\n    extensions: optional(simplifiedExtensionsSchema)\n  }),\n  signal: optional(copyValue)\n};\nvar publicKeyCredentialWithAssertion = {\n  type: required(copyValue),\n  id: required(copyValue),\n  rawId: required(convertValue),\n  authenticatorAttachment: optional(copyValue),\n  response: required({\n    clientDataJSON: required(convertValue),\n    authenticatorData: required(convertValue),\n    signature: required(convertValue),\n    userHandle: required(convertValue)\n  }),\n  clientExtensionResults: derived(simplifiedClientExtensionResultsSchema, pkc => pkc.getClientExtensionResults())\n};\nvar schema = {\n  credentialCreationOptions,\n  publicKeyCredentialWithAttestation,\n  credentialRequestOptions,\n  publicKeyCredentialWithAssertion\n};\n\n// src/webauthn-json/basic/api.ts\nfunction createRequestFromJSON(requestJSON) {\n  return convert(base64urlToBuffer, credentialCreationOptions, requestJSON);\n}\nfunction createResponseToJSON(credential) {\n  return convert(bufferToBase64url, publicKeyCredentialWithAttestation, credential);\n}\nfunction create(_x) {\n  return _create.apply(this, arguments);\n}\nfunction _create() {\n  _create = _asyncToGenerator(function* (requestJSON) {\n    const credential = yield navigator.credentials.create(createRequestFromJSON(requestJSON));\n    return createResponseToJSON(credential);\n  });\n  return _create.apply(this, arguments);\n}\nfunction getRequestFromJSON(requestJSON) {\n  return convert(base64urlToBuffer, credentialRequestOptions, requestJSON);\n}\nfunction getResponseToJSON(credential) {\n  return convert(bufferToBase64url, publicKeyCredentialWithAssertion, credential);\n}\nfunction get(_x2) {\n  return _get.apply(this, arguments);\n} // src/webauthn-json/basic/supported.ts\nfunction _get() {\n  _get = _asyncToGenerator(function* (requestJSON) {\n    const credential = yield navigator.credentials.get(getRequestFromJSON(requestJSON));\n    return getResponseToJSON(credential);\n  });\n  return _get.apply(this, arguments);\n}\nfunction supported() {\n  return !!(navigator.credentials && navigator.credentials.create && navigator.credentials.get && window.PublicKeyCredential);\n}\nexport { create, get, schema, supported };","map":{"version":3,"names":["base64urlToBuffer","baseurl64String","padding","slice","length","base64String","replace","str","atob","buffer","ArrayBuffer","byteView","Uint8Array","i","charCodeAt","bufferToBase64url","charCode","String","fromCharCode","btoa","base64urlString","copyValue","convertValue","convert","conversionFn","schema2","input","Array","map","v","Object","output","key","schemaField","entries","derive","required","Error","schema","derived","optional","publicKeyCredentialDescriptorSchema","type","id","transports","simplifiedExtensionsSchema","appid","appidExclude","credProps","simplifiedClientExtensionResultsSchema","credentialCreationOptions","publicKey","rp","user","name","displayName","challenge","pubKeyCredParams","timeout","excludeCredentials","authenticatorSelection","attestation","extensions","signal","publicKeyCredentialWithAttestation","rawId","authenticatorAttachment","response","clientDataJSON","attestationObject","_a","getTransports","call","clientExtensionResults","pkc","getClientExtensionResults","credentialRequestOptions","mediation","rpId","allowCredentials","userVerification","publicKeyCredentialWithAssertion","authenticatorData","signature","userHandle","createRequestFromJSON","requestJSON","createResponseToJSON","credential","create","_x","_create","apply","arguments","_asyncToGenerator","navigator","credentials","getRequestFromJSON","getResponseToJSON","get","_x2","_get","supported","window","PublicKeyCredential"],"sources":["/Users/martin.perez.cobo/Documents/Repositories/Academics-FrontEnd/node_modules/@github/webauthn-json/dist/esm/webauthn-json.js"],"sourcesContent":["// src/webauthn-json/base64url.ts\nfunction base64urlToBuffer(baseurl64String) {\n  const padding = \"==\".slice(0, (4 - baseurl64String.length % 4) % 4);\n  const base64String = baseurl64String.replace(/-/g, \"+\").replace(/_/g, \"/\") + padding;\n  const str = atob(base64String);\n  const buffer = new ArrayBuffer(str.length);\n  const byteView = new Uint8Array(buffer);\n  for (let i = 0; i < str.length; i++) {\n    byteView[i] = str.charCodeAt(i);\n  }\n  return buffer;\n}\nfunction bufferToBase64url(buffer) {\n  const byteView = new Uint8Array(buffer);\n  let str = \"\";\n  for (const charCode of byteView) {\n    str += String.fromCharCode(charCode);\n  }\n  const base64String = btoa(str);\n  const base64urlString = base64String.replace(/\\+/g, \"-\").replace(\n    /\\//g,\n    \"_\"\n  ).replace(/=/g, \"\");\n  return base64urlString;\n}\n\n// src/webauthn-json/convert.ts\nvar copyValue = \"copy\";\nvar convertValue = \"convert\";\nfunction convert(conversionFn, schema2, input) {\n  if (schema2 === copyValue) {\n    return input;\n  }\n  if (schema2 === convertValue) {\n    return conversionFn(input);\n  }\n  if (schema2 instanceof Array) {\n    return input.map((v) => convert(conversionFn, schema2[0], v));\n  }\n  if (schema2 instanceof Object) {\n    const output = {};\n    for (const [key, schemaField] of Object.entries(schema2)) {\n      if (schemaField.derive) {\n        const v = schemaField.derive(input);\n        if (v !== void 0) {\n          input[key] = v;\n        }\n      }\n      if (!(key in input)) {\n        if (schemaField.required) {\n          throw new Error(`Missing key: ${key}`);\n        }\n        continue;\n      }\n      if (input[key] == null) {\n        output[key] = null;\n        continue;\n      }\n      output[key] = convert(\n        conversionFn,\n        schemaField.schema,\n        input[key]\n      );\n    }\n    return output;\n  }\n}\nfunction derived(schema2, derive) {\n  return {\n    required: true,\n    schema: schema2,\n    derive\n  };\n}\nfunction required(schema2) {\n  return {\n    required: true,\n    schema: schema2\n  };\n}\nfunction optional(schema2) {\n  return {\n    required: false,\n    schema: schema2\n  };\n}\n\n// src/webauthn-json/basic/schema.ts\nvar publicKeyCredentialDescriptorSchema = {\n  type: required(copyValue),\n  id: required(convertValue),\n  transports: optional(copyValue)\n};\nvar simplifiedExtensionsSchema = {\n  appid: optional(copyValue),\n  appidExclude: optional(copyValue),\n  credProps: optional(copyValue)\n};\nvar simplifiedClientExtensionResultsSchema = {\n  appid: optional(copyValue),\n  appidExclude: optional(copyValue),\n  credProps: optional(copyValue)\n};\nvar credentialCreationOptions = {\n  publicKey: required({\n    rp: required(copyValue),\n    user: required({\n      id: required(convertValue),\n      name: required(copyValue),\n      displayName: required(copyValue)\n    }),\n    challenge: required(convertValue),\n    pubKeyCredParams: required(copyValue),\n    timeout: optional(copyValue),\n    excludeCredentials: optional([publicKeyCredentialDescriptorSchema]),\n    authenticatorSelection: optional(copyValue),\n    attestation: optional(copyValue),\n    extensions: optional(simplifiedExtensionsSchema)\n  }),\n  signal: optional(copyValue)\n};\nvar publicKeyCredentialWithAttestation = {\n  type: required(copyValue),\n  id: required(copyValue),\n  rawId: required(convertValue),\n  authenticatorAttachment: optional(copyValue),\n  response: required({\n    clientDataJSON: required(convertValue),\n    attestationObject: required(convertValue),\n    transports: derived(\n      copyValue,\n      (response) => {\n        var _a;\n        return ((_a = response.getTransports) == null ? void 0 : _a.call(response)) || [];\n      }\n    )\n  }),\n  clientExtensionResults: derived(\n    simplifiedClientExtensionResultsSchema,\n    (pkc) => pkc.getClientExtensionResults()\n  )\n};\nvar credentialRequestOptions = {\n  mediation: optional(copyValue),\n  publicKey: required({\n    challenge: required(convertValue),\n    timeout: optional(copyValue),\n    rpId: optional(copyValue),\n    allowCredentials: optional([publicKeyCredentialDescriptorSchema]),\n    userVerification: optional(copyValue),\n    extensions: optional(simplifiedExtensionsSchema)\n  }),\n  signal: optional(copyValue)\n};\nvar publicKeyCredentialWithAssertion = {\n  type: required(copyValue),\n  id: required(copyValue),\n  rawId: required(convertValue),\n  authenticatorAttachment: optional(copyValue),\n  response: required({\n    clientDataJSON: required(convertValue),\n    authenticatorData: required(convertValue),\n    signature: required(convertValue),\n    userHandle: required(convertValue)\n  }),\n  clientExtensionResults: derived(\n    simplifiedClientExtensionResultsSchema,\n    (pkc) => pkc.getClientExtensionResults()\n  )\n};\nvar schema = {\n  credentialCreationOptions,\n  publicKeyCredentialWithAttestation,\n  credentialRequestOptions,\n  publicKeyCredentialWithAssertion\n};\n\n// src/webauthn-json/basic/api.ts\nfunction createRequestFromJSON(requestJSON) {\n  return convert(base64urlToBuffer, credentialCreationOptions, requestJSON);\n}\nfunction createResponseToJSON(credential) {\n  return convert(\n    bufferToBase64url,\n    publicKeyCredentialWithAttestation,\n    credential\n  );\n}\nasync function create(requestJSON) {\n  const credential = await navigator.credentials.create(\n    createRequestFromJSON(requestJSON)\n  );\n  return createResponseToJSON(credential);\n}\nfunction getRequestFromJSON(requestJSON) {\n  return convert(base64urlToBuffer, credentialRequestOptions, requestJSON);\n}\nfunction getResponseToJSON(credential) {\n  return convert(\n    bufferToBase64url,\n    publicKeyCredentialWithAssertion,\n    credential\n  );\n}\nasync function get(requestJSON) {\n  const credential = await navigator.credentials.get(\n    getRequestFromJSON(requestJSON)\n  );\n  return getResponseToJSON(credential);\n}\n\n// src/webauthn-json/basic/supported.ts\nfunction supported() {\n  return !!(navigator.credentials && navigator.credentials.create && navigator.credentials.get && window.PublicKeyCredential);\n}\nexport {\n  create,\n  get,\n  schema,\n  supported\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}