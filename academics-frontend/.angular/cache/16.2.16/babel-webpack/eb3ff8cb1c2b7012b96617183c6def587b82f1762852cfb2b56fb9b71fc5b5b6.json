{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/snack-bar\";\nexport default class ToastService {\n  constructor(_snackBar) {\n    this._snackBar = _snackBar;\n    this.defaultTimeout = 5000;\n  }\n  setMessage(message, type, timeout = this.defaultTimeout) {\n    this._snackBar.dismiss();\n    this._snackBar.open(message.toString(), 'Close', {\n      duration: timeout,\n      panelClass: [type]\n    });\n  }\n  static {\n    this.ɵfac = function ToastService_Factory(t) {\n      return new (t || ToastService)(i0.ɵɵinject(i1.MatSnackBar));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ToastService,\n      factory: ToastService.ɵfac\n    });\n  }\n}\nexport var ToastType;\n(function (ToastType) {\n  ToastType[\"SUCCESS\"] = \"snackbar-success\";\n  ToastType[\"INFO\"] = \"snackbar-info\";\n  ToastType[\"WARNING\"] = \"snackbar-warning\";\n  ToastType[\"DANGER\"] = \"snackbar-danger\";\n})(ToastType || (ToastType = {}));","map":{"version":3,"names":["ToastService","constructor","_snackBar","defaultTimeout","setMessage","message","type","timeout","dismiss","open","toString","duration","panelClass","i0","ɵɵinject","i1","MatSnackBar","factory","ɵfac","ToastType"],"sources":["/Users/martin.perez.cobo/Documents/Repositories/Academics-FrontEnd/src/app/services/ToastService.ts"],"sourcesContent":["import {Component, Injectable, Input} from \"@angular/core\";\nimport {Observable, Subject} from \"rxjs\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\n\n@Injectable()\nexport default class ToastService {\n  private defaultTimeout: number = 5000;\n\n  constructor(private _snackBar: MatSnackBar) {\n  }\n\n  public setMessage(message: String, type: ToastType, timeout: number = this.defaultTimeout): void {\n    this._snackBar.dismiss();\n    this._snackBar.open( message.toString(), 'Close', {\n      duration: timeout,\n      panelClass: [type]\n    });\n\n  }\n}\n\nexport interface ToastMessage {\n  body: String;\n  subject: String\n  type: ToastType;\n  timeout: number;\n}\nexport enum ToastType {\n  SUCCESS = 'snackbar-success',\n  INFO = 'snackbar-info',\n  WARNING = 'snackbar-warning',\n  DANGER = 'snackbar-danger'\n}\n"],"mappings":";;AAKA,eAAc,MAAOA,YAAY;EAG/BC,YAAoBC,SAAsB;IAAtB,KAAAA,SAAS,GAATA,SAAS;IAFrB,KAAAC,cAAc,GAAW,IAAI;EAGrC;EAEOC,UAAUA,CAACC,OAAe,EAAEC,IAAe,EAAEC,OAAA,GAAkB,IAAI,CAACJ,cAAc;IACvF,IAAI,CAACD,SAAS,CAACM,OAAO,EAAE;IACxB,IAAI,CAACN,SAAS,CAACO,IAAI,CAAEJ,OAAO,CAACK,QAAQ,EAAE,EAAE,OAAO,EAAE;MAChDC,QAAQ,EAAEJ,OAAO;MACjBK,UAAU,EAAE,CAACN,IAAI;KAClB,CAAC;EAEJ;;;uBAbmBN,YAAY,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA;IAAA;EAAA;;;aAAZhB,YAAY;MAAAiB,OAAA,EAAZjB,YAAY,CAAAkB;IAAA;EAAA;;AAsBjC,WAAYC,SAKX;AALD,WAAYA,SAAS;EACnBA,SAAA,gCAA4B;EAC5BA,SAAA,0BAAsB;EACtBA,SAAA,gCAA4B;EAC5BA,SAAA,8BAA0B;AAC5B,CAAC,EALWA,SAAS,KAATA,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}