{"ast":null,"code":"import _asyncToGenerator from \"/Users/martin.perez.cobo/Documents/Repositories/Academics-FrontEnd/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport AuthenticationService from \"../../../services/AuthenticationService\";\nimport { Student } from \"../../../../models/Student\";\nimport User from \"../../../../models/User\";\nimport { Grade } from \"../../../../models/Grade\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../controllers/StudentController\";\nexport default class StudentService {\n  constructor(student_controller, authentication_service) {\n    this.student_controller = student_controller;\n    this.authentication_service = authentication_service;\n  }\n  // ! Business Logic\n  // * Create Student Profile\n  createStudentProfile(user_id) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      return new Promise((resolve, reject) => {\n        _this.student_controller.createStudentProfile(user_id, _this.authentication_service.getToken()).subscribe({\n          next: student => {\n            console.log(student);\n            resolve(true);\n          },\n          error: error => {\n            console.log(error);\n            resolve(false);\n          }\n        });\n      });\n    })();\n  }\n  // * Delete Student Profile\n  deleteStudentProfile(user_id) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      return new Promise((resolve, reject) => {\n        _this2.student_controller.deleteStudentProfile(user_id, _this2.authentication_service.getToken()).subscribe({\n          next: student => {\n            resolve(true);\n          },\n          error: error => {\n            resolve(false);\n          }\n        });\n      });\n    })();\n  }\n  // * Get all Students\n  getAllStudents() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      return new Promise((resolve, reject) => {\n        _this3.student_controller.getAllStudents(_this3.authentication_service.getToken()).subscribe({\n          next: students => {\n            resolve(students.map(student => {\n              let student_instance = new Student(student);\n              student_instance.setUser(new User(student.user));\n              student_instance.setGrades(student_instance.getGrades()?.map(grade_obj => {\n                return new Grade(grade_obj);\n              }));\n              return student_instance;\n            }));\n          },\n          error: error => {\n            resolve([]);\n          }\n        });\n      });\n    })();\n  }\n  // * Get a Student\n  getStudent(student_id) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      return new Promise((resolve, reject) => {\n        _this4.student_controller.getStudent(student_id, _this4.authentication_service.getToken()).subscribe({\n          next: student => {\n            let student_instance = new Student(student);\n            student_instance.setUser(new User(student.user));\n            student_instance.setGrades(student_instance.getGrades()?.map(grade_obj => {\n              return new Grade(grade_obj);\n            }));\n            resolve(student_instance);\n          },\n          error: error => {\n            resolve(error);\n          }\n        });\n      });\n    })();\n  }\n  static {\n    this.ɵfac = function StudentService_Factory(t) {\n      return new (t || StudentService)(i0.ɵɵinject(i1.StudentController), i0.ɵɵinject(AuthenticationService));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: StudentService,\n      factory: StudentService.ɵfac\n    });\n  }\n}","map":{"version":3,"names":["AuthenticationService","Student","User","Grade","StudentService","constructor","student_controller","authentication_service","createStudentProfile","user_id","_this","_asyncToGenerator","Promise","resolve","reject","getToken","subscribe","next","student","console","log","error","deleteStudentProfile","_this2","getAllStudents","_this3","students","map","student_instance","setUser","user","setGrades","getGrades","grade_obj","getStudent","student_id","_this4","i0","ɵɵinject","i1","StudentController","factory","ɵfac"],"sources":["/Users/martin.perez.cobo/Documents/Repositories/Academics-FrontEnd/src/app/modules/dashboard/services/StudentService.ts"],"sourcesContent":["import {Injectable} from \"@angular/core\";\nimport AuthenticationService from \"../../../services/AuthenticationService\";\nimport {Student} from \"../../../../models/Student\";\nimport {StudentController} from \"../controllers/StudentController\";\nimport User from \"../../../../models/User\";\nimport {Grade} from \"../../../../models/Grade\";\n\n@Injectable()\nexport default class StudentService {\n  constructor(\n    private student_controller: StudentController,\n    private authentication_service: AuthenticationService\n  ) {\n  }\n\n  // ! Business Logic\n\n  // * Create Student Profile\n  public async createStudentProfile(user_id: String): Promise<boolean> {\n    return new Promise<boolean>((resolve, reject) => {\n      this.student_controller.createStudentProfile(user_id, this.authentication_service.getToken()).subscribe({\n        next: (student: any) => {\n          console.log(student);\n          resolve(true);\n        },\n        error: (error: any) => {\n          console.log(error);\n          resolve(false);\n        },\n      });\n    })\n  }\n\n  // * Delete Student Profile\n  public async deleteStudentProfile(user_id: String): Promise<boolean> {\n    return new Promise<boolean>((resolve, reject) => {\n      this.student_controller.deleteStudentProfile(user_id, this.authentication_service.getToken()).subscribe({\n        next: (student: any) => {\n          resolve(true);\n        },\n        error: (error: any) => {\n          resolve(false);\n        },\n      });\n    })\n  }\n\n  // * Get all Students\n  public async getAllStudents(): Promise<Student[]> {\n    return new Promise<Student[]>((resolve, reject) => {\n      this.student_controller.getAllStudents(this.authentication_service.getToken()).subscribe({\n        next: (students: Object[]) => {\n          resolve(students.map((student: any) => {\n            let student_instance: Student = new Student(student as Student);\n            student_instance.setUser(new User(student.user as User));\n            student_instance.setGrades(student_instance.getGrades()?.map((grade_obj: Object) => {\n              return new Grade(grade_obj as Grade);\n            }))\n            return student_instance;\n          }))\n        },\n        error: (error: any) => {\n          resolve([])\n        },\n      });\n    })\n  }\n\n  // * Get a Student\n  public async getStudent(student_id: string): Promise<Student> {\n    return new Promise<Student>((resolve, reject) => {\n      this.student_controller.getStudent(student_id, this.authentication_service.getToken()).subscribe({\n        next: (student: any) => {\n          let student_instance: Student = new Student(student as Student);\n          student_instance.setUser(new User(student.user as User));\n          student_instance.setGrades(student_instance.getGrades()?.map((grade_obj: Object) => {\n            return new Grade(grade_obj as Grade);\n          }))\n          resolve(student_instance);\n        },\n        error: (error: any) => {\n          resolve(error);\n        },\n      });\n    })\n  }\n\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}