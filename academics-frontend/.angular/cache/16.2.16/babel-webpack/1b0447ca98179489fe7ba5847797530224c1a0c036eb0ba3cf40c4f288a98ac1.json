{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ClassController {\n  // ! Constructors\n  constructor(http) {\n    this.http = http;\n    // ! Attributes\n    this.server_url = 'http://localhost:8080';\n  }\n  // ! Endpoints\n  // * Get all Classes\n  getAllClasses(token) {\n    return this.http.get(this.server_url + '/api/class/', {\n      headers: {\n        'Authentication': 'Bearer ' + token\n      },\n      observe: 'body'\n    });\n  }\n  // * Get a Class by Id\n  getClassById(class_id, token) {\n    return this.http.get(this.server_url + '/api/class/' + class_id, {\n      headers: {\n        'Authentication': 'Bearer ' + token\n      }\n    });\n  }\n  // * Get Clases from Student\n  getClassesFromStudent(student_id, token) {\n    return this.http.get(this.server_url + '/api/class/student/' + student_id, {\n      headers: {\n        'Authentication': 'Bearer ' + token\n      }\n    });\n  }\n  // * Create a Class\n  createClass(class_instance, token) {\n    return this.http.post(this.server_url + '/api/class/', class_instance, {\n      headers: {\n        'Authentication': 'Bearer ' + token\n      }\n    });\n  }\n  // * Delete a Class\n  deleteClass(class_id, token) {\n    return this.http.delete(this.server_url + '/api/class/' + class_id, {\n      headers: {\n        'Authentication': 'Bearer ' + token\n      },\n      responseType: 'text'\n    });\n  }\n  // * Modify a Class\n  modifyClass(class_instance, token) {\n    return this.http.put(this.server_url + '/api/class/', class_instance, {\n      headers: {\n        'Authentication': 'Bearer ' + token\n      }\n    });\n  }\n  // * Alter a Class' Professors\n  alterClassProfessors(class_id, professor_ids, token) {\n    return this.http.put(this.server_url + '/api/class/' + class_id + '/professors', professor_ids, {\n      headers: {\n        'Authentication': 'Bearer ' + token\n      }\n    });\n  }\n  // * Alter a Class' Students\n  alterClassStudents(class_id, student_ids, token) {\n    return this.http.put(this.server_url + '/api/class/' + class_id + '/students', student_ids, {\n      headers: {\n        'Authentication': 'Bearer ' + token\n      }\n    });\n  }\n  static {\n    this.ɵfac = function ClassController_Factory(t) {\n      return new (t || ClassController)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ClassController,\n      factory: ClassController.ɵfac\n    });\n  }\n}","map":{"version":3,"names":["ClassController","constructor","http","server_url","getAllClasses","token","get","headers","observe","getClassById","class_id","getClassesFromStudent","student_id","createClass","class_instance","post","deleteClass","delete","responseType","modifyClass","put","alterClassProfessors","professor_ids","alterClassStudents","student_ids","i0","ɵɵinject","i1","HttpClient","factory","ɵfac"],"sources":["/Users/martin.perez.cobo/Documents/Repositories/Academics-FrontEnd/src/app/modules/dashboard/controllers/ClassController.ts"],"sourcesContent":["import {Injectable} from \"@angular/core\";\nimport {Observable} from \"rxjs\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {Class} from \"../../../../models/Class\";\n\n@Injectable()\nexport class ClassController {\n  // ! Attributes\n  private server_url: String = 'http://localhost:8080';\n\n  // ! Constructors\n  constructor(private http: HttpClient) {\n  }\n\n  // ! Endpoints\n\n  // * Get all Classes\n  public getAllClasses(token: String | null): Observable<Class[]> {\n    return this.http.get<Class[]>(this.server_url + '/api/class/', {\n      headers: {\n        'Authentication': 'Bearer ' + token\n      },\n      observe: 'body'\n    });\n  }\n\n  // * Get a Class by Id\n  public getClassById(class_id: String, token: String | null): Observable<Object> {\n    return this.http.get<Object>(this.server_url + '/api/class/' + class_id, {\n      headers: {\n        'Authentication': 'Bearer ' + token\n      }\n    });\n  }\n\n  // * Get Clases from Student\n  public getClassesFromStudent(student_id: String, token: String | null): Observable<Class[]> {\n    return this.http.get<Class[]>(this.server_url + '/api/class/student/' + student_id, {\n      headers: {\n        'Authentication': 'Bearer ' + token\n      }\n    });\n  }\n\n  // * Create a Class\n  public createClass(class_instance: Class, token: String | null): Observable<Class> {\n    return this.http.post<Class>(this.server_url + '/api/class/', class_instance, {\n      headers: {\n        'Authentication': 'Bearer ' + token,\n      }\n    });\n  }\n\n  // * Delete a Class\n  public deleteClass(class_id: String, token: String | null): Observable<String> {\n    return this.http.delete(this.server_url + '/api/class/' + class_id, {\n      headers: {\n        'Authentication': 'Bearer ' + token,\n      },\n      responseType: 'text'\n    });\n  }\n\n  // * Modify a Class\n  public modifyClass(class_instance: Class, token: String | null): Observable<Class> {\n    return this.http.put<Class>(this.server_url + '/api/class/', class_instance, {\n      headers: {\n        'Authentication': 'Bearer ' + token,\n      }\n    });\n  }\n\n  // * Alter a Class' Professors\n  public alterClassProfessors(class_id: String, professor_ids: String[], token: String | null): Observable<Class> {\n    return this.http.put<Class>(this.server_url + '/api/class/' + class_id + '/professors', professor_ids, {\n      headers: {\n        'Authentication': 'Bearer ' + token,\n      }\n    });\n  }\n\n  // * Alter a Class' Students\n  public alterClassStudents(class_id: String, student_ids: String[], token: String | null): Observable<Class> {\n    return this.http.put<Class>(this.server_url + '/api/class/' + class_id + '/students', student_ids, {\n      headers: {\n        'Authentication': 'Bearer ' + token,\n      }\n    });\n  }\n}\n"],"mappings":";;AAMA,OAAM,MAAOA,eAAe;EAI1B;EACAC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAJxB;IACQ,KAAAC,UAAU,GAAW,uBAAuB;EAIpD;EAEA;EAEA;EACOC,aAAaA,CAACC,KAAoB;IACvC,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAU,IAAI,CAACH,UAAU,GAAG,aAAa,EAAE;MAC7DI,OAAO,EAAE;QACP,gBAAgB,EAAE,SAAS,GAAGF;OAC/B;MACDG,OAAO,EAAE;KACV,CAAC;EACJ;EAEA;EACOC,YAAYA,CAACC,QAAgB,EAAEL,KAAoB;IACxD,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAS,IAAI,CAACH,UAAU,GAAG,aAAa,GAAGO,QAAQ,EAAE;MACvEH,OAAO,EAAE;QACP,gBAAgB,EAAE,SAAS,GAAGF;;KAEjC,CAAC;EACJ;EAEA;EACOM,qBAAqBA,CAACC,UAAkB,EAAEP,KAAoB;IACnE,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAU,IAAI,CAACH,UAAU,GAAG,qBAAqB,GAAGS,UAAU,EAAE;MAClFL,OAAO,EAAE;QACP,gBAAgB,EAAE,SAAS,GAAGF;;KAEjC,CAAC;EACJ;EAEA;EACOQ,WAAWA,CAACC,cAAqB,EAAET,KAAoB;IAC5D,OAAO,IAAI,CAACH,IAAI,CAACa,IAAI,CAAQ,IAAI,CAACZ,UAAU,GAAG,aAAa,EAAEW,cAAc,EAAE;MAC5EP,OAAO,EAAE;QACP,gBAAgB,EAAE,SAAS,GAAGF;;KAEjC,CAAC;EACJ;EAEA;EACOW,WAAWA,CAACN,QAAgB,EAAEL,KAAoB;IACvD,OAAO,IAAI,CAACH,IAAI,CAACe,MAAM,CAAC,IAAI,CAACd,UAAU,GAAG,aAAa,GAAGO,QAAQ,EAAE;MAClEH,OAAO,EAAE;QACP,gBAAgB,EAAE,SAAS,GAAGF;OAC/B;MACDa,YAAY,EAAE;KACf,CAAC;EACJ;EAEA;EACOC,WAAWA,CAACL,cAAqB,EAAET,KAAoB;IAC5D,OAAO,IAAI,CAACH,IAAI,CAACkB,GAAG,CAAQ,IAAI,CAACjB,UAAU,GAAG,aAAa,EAAEW,cAAc,EAAE;MAC3EP,OAAO,EAAE;QACP,gBAAgB,EAAE,SAAS,GAAGF;;KAEjC,CAAC;EACJ;EAEA;EACOgB,oBAAoBA,CAACX,QAAgB,EAAEY,aAAuB,EAAEjB,KAAoB;IACzF,OAAO,IAAI,CAACH,IAAI,CAACkB,GAAG,CAAQ,IAAI,CAACjB,UAAU,GAAG,aAAa,GAAGO,QAAQ,GAAG,aAAa,EAAEY,aAAa,EAAE;MACrGf,OAAO,EAAE;QACP,gBAAgB,EAAE,SAAS,GAAGF;;KAEjC,CAAC;EACJ;EAEA;EACOkB,kBAAkBA,CAACb,QAAgB,EAAEc,WAAqB,EAAEnB,KAAoB;IACrF,OAAO,IAAI,CAACH,IAAI,CAACkB,GAAG,CAAQ,IAAI,CAACjB,UAAU,GAAG,aAAa,GAAGO,QAAQ,GAAG,WAAW,EAAEc,WAAW,EAAE;MACjGjB,OAAO,EAAE;QACP,gBAAgB,EAAE,SAAS,GAAGF;;KAEjC,CAAC;EACJ;;;uBAlFWL,eAAe,EAAAyB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAf5B,eAAe;MAAA6B,OAAA,EAAf7B,eAAe,CAAA8B;IAAA;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}