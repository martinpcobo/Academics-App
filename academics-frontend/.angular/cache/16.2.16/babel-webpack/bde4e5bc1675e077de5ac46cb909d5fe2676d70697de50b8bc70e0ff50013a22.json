{"ast":null,"code":"import _asyncToGenerator from \"/Users/martin.perez.cobo/Documents/Repositories/Academics-FrontEnd/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { Subject } from \"../../../../models/Subject\";\nimport AuthenticationService from \"../../../services/AuthenticationService\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../controllers/SubjectController\";\nexport default class SubjectService {\n  constructor(subject_controller, authentication_service) {\n    this.subject_controller = subject_controller;\n    this.authentication_service = authentication_service;\n  }\n  // ! Business Logic\n  // * Get all subjects\n  getAllSubjects() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      return new Promise((resolve, reject) => {\n        _this.subject_controller.getAllSubjects(_this.authentication_service.getToken()).subscribe({\n          next: subjects => {\n            resolve(subjects.map(subject_instance => {\n              return new Subject(subject_instance);\n            }));\n          },\n          error: error => {\n            resolve([]);\n          }\n        });\n      });\n    })();\n  }\n  // * Create Subject\n  createSubject(subject_instance) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      return new Promise((resolve, reject) => {\n        _this2.subject_controller.createSubject(subject_instance, _this2.authentication_service.getToken()).subscribe({\n          next: res => {\n            resolve(true);\n          },\n          error: error => {\n            resolve(false);\n          }\n        });\n      });\n    })();\n  }\n  // * Modify a Subject\n  modifySubject(subject_instance) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      return new Promise((resolve, reject) => {\n        _this3.subject_controller.modifySubject(subject_instance, _this3.authentication_service.getToken()).subscribe({\n          next: res => {\n            resolve(true);\n          },\n          error: error => {\n            resolve(false);\n          }\n        });\n      });\n    })();\n  }\n  // * Delete a Subject\n  deleteSubject(subject_id) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      return new Promise((resolve, reject) => {\n        _this4.subject_controller.deleteSubject(subject_id, _this4.authentication_service.getToken()).subscribe({\n          next: res => {\n            resolve(true);\n          },\n          error: error => {\n            resolve(false);\n          }\n        });\n      });\n    })();\n  }\n  static {\n    this.ɵfac = function SubjectService_Factory(t) {\n      return new (t || SubjectService)(i0.ɵɵinject(i1.SubjectController), i0.ɵɵinject(AuthenticationService));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: SubjectService,\n      factory: SubjectService.ɵfac\n    });\n  }\n}","map":{"version":3,"names":["Subject","AuthenticationService","SubjectService","constructor","subject_controller","authentication_service","getAllSubjects","_this","_asyncToGenerator","Promise","resolve","reject","getToken","subscribe","next","subjects","map","subject_instance","error","createSubject","_this2","res","modifySubject","_this3","deleteSubject","subject_id","_this4","i0","ɵɵinject","i1","SubjectController","factory","ɵfac"],"sources":["/Users/martin.perez.cobo/Documents/Repositories/Academics-FrontEnd/src/app/modules/dashboard/services/SubjectService.ts"],"sourcesContent":["import {Injectable} from \"@angular/core\";\nimport {Subject} from \"../../../../models/Subject\";\nimport {SubjectController} from \"../controllers/SubjectController\";\nimport AuthenticationService from \"../../../services/AuthenticationService\";\n\n@Injectable()\nexport default class SubjectService {\n  constructor(private subject_controller: SubjectController, private authentication_service: AuthenticationService) {\n  }\n\n  // ! Business Logic\n\n  // * Get all subjects\n  public async getAllSubjects(): Promise<Subject[]> {\n    return new Promise<Subject[]>((resolve, reject) => {\n      this.subject_controller.getAllSubjects(this.authentication_service.getToken()).subscribe({\n        next: (subjects: Object[]) => {\n          resolve(subjects.map((subject_instance: Object) => {\n            return new Subject(subject_instance as Subject);\n          }))\n        },\n        error: (error: any) => {\n          resolve([])\n        },\n      });\n    })\n  }\n\n  // * Create Subject\n  public async createSubject(subject_instance: Subject): Promise<boolean> {\n    return new Promise<boolean>((resolve, reject) => {\n      this.subject_controller.createSubject(subject_instance, this.authentication_service.getToken()).subscribe({\n        next: (res: Subject) => {\n          resolve(true);\n        },\n        error: (error: any) => {\n          resolve(false)\n        },\n      });\n    })\n  }\n\n  // * Modify a Subject\n  public async modifySubject(subject_instance: Subject): Promise<boolean> {\n    return new Promise<boolean>((resolve, reject) => {\n      this.subject_controller.modifySubject(subject_instance, this.authentication_service.getToken()).subscribe({\n        next: (res: Subject) => {\n          resolve(true);\n        },\n        error: (error: any) => {\n          resolve(false)\n        },\n      });\n    })\n  }\n\n  // * Delete a Subject\n  public async deleteSubject(subject_id: String): Promise<boolean> {\n    return new Promise<boolean>((resolve, reject) => {\n      this.subject_controller.deleteSubject(subject_id, this.authentication_service.getToken()).subscribe({\n        next: (res: String) => {\n          resolve(true);\n        },\n        error: (error: any) => {\n          resolve(false)\n        },\n      });\n    })\n  }\n}\n"],"mappings":";AACA,SAAQA,OAAO,QAAO,4BAA4B;AAElD,OAAOC,qBAAqB,MAAM,yCAAyC;;;AAG3E,eAAc,MAAOC,cAAc;EACjCC,YAAoBC,kBAAqC,EAAUC,sBAA6C;IAA5F,KAAAD,kBAAkB,GAAlBA,kBAAkB;IAA6B,KAAAC,sBAAsB,GAAtBA,sBAAsB;EACzF;EAEA;EAEA;EACaC,cAAcA,CAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MACzB,OAAO,IAAIC,OAAO,CAAY,CAACC,OAAO,EAAEC,MAAM,KAAI;QAChDJ,KAAI,CAACH,kBAAkB,CAACE,cAAc,CAACC,KAAI,CAACF,sBAAsB,CAACO,QAAQ,EAAE,CAAC,CAACC,SAAS,CAAC;UACvFC,IAAI,EAAGC,QAAkB,IAAI;YAC3BL,OAAO,CAACK,QAAQ,CAACC,GAAG,CAAEC,gBAAwB,IAAI;cAChD,OAAO,IAAIjB,OAAO,CAACiB,gBAA2B,CAAC;YACjD,CAAC,CAAC,CAAC;UACL,CAAC;UACDC,KAAK,EAAGA,KAAU,IAAI;YACpBR,OAAO,CAAC,EAAE,CAAC;UACb;SACD,CAAC;MACJ,CAAC,CAAC;IAAA;EACJ;EAEA;EACaS,aAAaA,CAACF,gBAAyB;IAAA,IAAAG,MAAA;IAAA,OAAAZ,iBAAA;MAClD,OAAO,IAAIC,OAAO,CAAU,CAACC,OAAO,EAAEC,MAAM,KAAI;QAC9CS,MAAI,CAAChB,kBAAkB,CAACe,aAAa,CAACF,gBAAgB,EAAEG,MAAI,CAACf,sBAAsB,CAACO,QAAQ,EAAE,CAAC,CAACC,SAAS,CAAC;UACxGC,IAAI,EAAGO,GAAY,IAAI;YACrBX,OAAO,CAAC,IAAI,CAAC;UACf,CAAC;UACDQ,KAAK,EAAGA,KAAU,IAAI;YACpBR,OAAO,CAAC,KAAK,CAAC;UAChB;SACD,CAAC;MACJ,CAAC,CAAC;IAAA;EACJ;EAEA;EACaY,aAAaA,CAACL,gBAAyB;IAAA,IAAAM,MAAA;IAAA,OAAAf,iBAAA;MAClD,OAAO,IAAIC,OAAO,CAAU,CAACC,OAAO,EAAEC,MAAM,KAAI;QAC9CY,MAAI,CAACnB,kBAAkB,CAACkB,aAAa,CAACL,gBAAgB,EAAEM,MAAI,CAAClB,sBAAsB,CAACO,QAAQ,EAAE,CAAC,CAACC,SAAS,CAAC;UACxGC,IAAI,EAAGO,GAAY,IAAI;YACrBX,OAAO,CAAC,IAAI,CAAC;UACf,CAAC;UACDQ,KAAK,EAAGA,KAAU,IAAI;YACpBR,OAAO,CAAC,KAAK,CAAC;UAChB;SACD,CAAC;MACJ,CAAC,CAAC;IAAA;EACJ;EAEA;EACac,aAAaA,CAACC,UAAkB;IAAA,IAAAC,MAAA;IAAA,OAAAlB,iBAAA;MAC3C,OAAO,IAAIC,OAAO,CAAU,CAACC,OAAO,EAAEC,MAAM,KAAI;QAC9Ce,MAAI,CAACtB,kBAAkB,CAACoB,aAAa,CAACC,UAAU,EAAEC,MAAI,CAACrB,sBAAsB,CAACO,QAAQ,EAAE,CAAC,CAACC,SAAS,CAAC;UAClGC,IAAI,EAAGO,GAAW,IAAI;YACpBX,OAAO,CAAC,IAAI,CAAC;UACf,CAAC;UACDQ,KAAK,EAAGA,KAAU,IAAI;YACpBR,OAAO,CAAC,KAAK,CAAC;UAChB;SACD,CAAC;MACJ,CAAC,CAAC;IAAA;EACJ;;;uBA9DmBR,cAAc,EAAAyB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,iBAAA,GAAAH,EAAA,CAAAC,QAAA,CAH5B3B,qBAAqB;IAAA;EAAA;;;aAGPC,cAAc;MAAA6B,OAAA,EAAd7B,cAAc,CAAA8B;IAAA;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}