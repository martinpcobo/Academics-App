{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport default class AuthenticationController {\n  // ! Constructor\n  constructor(http) {\n    this.http = http;\n    // ! Attributes\n    this.server_url = 'http://localhost:8080';\n  }\n  // ! Traditional AuthenticationService Requests\n  // * Login using Username and Password\n  authenticatePassword(credentials) {\n    return this.http.post(this.server_url + '/api/auth/login', credentials, {\n      responseType: 'text'\n    });\n  }\n  changePassword(user_id, old_password, new_password, token) {\n    return this.http.put(this.server_url + '/api/user/' + user_id + '/password', {\n      oldPassword: old_password,\n      newPassword: new_password\n    }, {\n      headers: {\n        'Authentication': 'Bearer ' + token\n      }\n    });\n  }\n  // ! WebAuthn AuthenticationService Requests\n  // * Start Authn AuthenticationService Registration\n  startAuthnRegistration(credentials) {\n    return this.http.post(this.server_url + '/api/auth/webauthn/register/start', credentials, {\n      responseType: \"json\",\n      observe: \"body\"\n    });\n  }\n  // * End Authn AuthenticationService Registration\n  endAuthnRegistration(credentials) {\n    return this.http.post(this.server_url + '/api/auth/webauthn/register/end', credentials, {\n      responseType: 'text'\n    });\n  }\n  // * Start Authn AuthenticationService Login\n  startAuthnLogin(credentials) {\n    return this.http.post(this.server_url + '/api/auth/webauthn/login/start', credentials);\n  }\n  // * End Authn AuthenticationService Login\n  endAuthnLogin(credentials) {\n    return this.http.post(this.server_url + '/api/auth/webauthn/login/end', {\n      username: credentials.getUsername(),\n      publicKey: credentials.getPublicKey()\n    }, {\n      responseType: 'text'\n    });\n  }\n  static {\n    this.ɵfac = function AuthenticationController_Factory(t) {\n      return new (t || AuthenticationController)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthenticationController,\n      factory: AuthenticationController.ɵfac\n    });\n  }\n}\n;","map":{"version":3,"names":["AuthenticationController","constructor","http","server_url","authenticatePassword","credentials","post","responseType","changePassword","user_id","old_password","new_password","token","put","oldPassword","newPassword","headers","startAuthnRegistration","observe","endAuthnRegistration","startAuthnLogin","endAuthnLogin","username","getUsername","publicKey","getPublicKey","i0","ɵɵinject","i1","HttpClient","factory","ɵfac"],"sources":["/Users/martin.perez.cobo/Documents/Repositories/Academics-FrontEnd/src/app/controllers/AuthenticationController.ts"],"sourcesContent":["import {Injectable} from \"@angular/core\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\nimport AuthLoginDetails from \"../../models/dtos/AuthLoginDetails\";\nimport User from \"../../models/User\";\n\n@Injectable()\nexport default class AuthenticationController {\n  // ! Attributes\n  private server_url: String = 'http://localhost:8080';\n\n  // ! Constructor\n  public constructor(private http: HttpClient) {\n  }\n\n  // ! Traditional AuthenticationService Requests\n  // * Login using Username and Password\n  public authenticatePassword(credentials: AuthLoginDetails): Observable<String> {\n    return this.http.post(this.server_url + '/api/auth/login', credentials, {\n      responseType: 'text',\n    });\n  }\n\n  public changePassword(user_id: String, old_password: String, new_password: String, token: String): Observable<User> {\n    return this.http.put<User>(this.server_url + '/api/user/' + user_id + '/password', {\n      oldPassword: old_password,\n      newPassword: new_password\n    }, {\n      headers: {\n        'Authentication': 'Bearer ' + token\n      }\n    });\n  }\n\n  // ! WebAuthn AuthenticationService Requests\n  // * Start Authn AuthenticationService Registration\n  public startAuthnRegistration(credentials: AuthLoginDetails): Observable<String> {\n    return this.http.post<String>(this.server_url + '/api/auth/webauthn/register/start', credentials, {\n      responseType: \"json\",\n      observe: \"body\"\n    });\n  }\n\n  // * End Authn AuthenticationService Registration\n  public endAuthnRegistration(credentials: AuthLoginDetails): Observable<String> {\n    return this.http.post(this.server_url + '/api/auth/webauthn/register/end', credentials, {\n      responseType: 'text',\n    });\n  }\n\n  // * Start Authn AuthenticationService Login\n  public startAuthnLogin(credentials: AuthLoginDetails): Observable<WebAuthnLoginResponse> {\n    return this.http.post<WebAuthnLoginResponse>(this.server_url + '/api/auth/webauthn/login/start', credentials);\n  }\n\n  // * End Authn AuthenticationService Login\n  public endAuthnLogin(credentials: AuthLoginDetails): Observable<String> {\n    return this.http.post(this.server_url + '/api/auth/webauthn/login/end',\n      {\n        username: credentials.getUsername(),\n        publicKey: credentials.getPublicKey()\n      },\n      {\n        responseType: 'text'\n      });\n  }\n}\n\nexport interface WebAuthnLoginResponse {\n  publicKey: any;\n};\n"],"mappings":";;AAOA,eAAc,MAAOA,wBAAwB;EAI3C;EACAC,YAA2BC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAJ/B;IACQ,KAAAC,UAAU,GAAW,uBAAuB;EAIpD;EAEA;EACA;EACOC,oBAAoBA,CAACC,WAA6B;IACvD,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAC,IAAI,CAACH,UAAU,GAAG,iBAAiB,EAAEE,WAAW,EAAE;MACtEE,YAAY,EAAE;KACf,CAAC;EACJ;EAEOC,cAAcA,CAACC,OAAe,EAAEC,YAAoB,EAAEC,YAAoB,EAAEC,KAAa;IAC9F,OAAO,IAAI,CAACV,IAAI,CAACW,GAAG,CAAO,IAAI,CAACV,UAAU,GAAG,YAAY,GAAGM,OAAO,GAAG,WAAW,EAAE;MACjFK,WAAW,EAAEJ,YAAY;MACzBK,WAAW,EAAEJ;KACd,EAAE;MACDK,OAAO,EAAE;QACP,gBAAgB,EAAE,SAAS,GAAGJ;;KAEjC,CAAC;EACJ;EAEA;EACA;EACOK,sBAAsBA,CAACZ,WAA6B;IACzD,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAS,IAAI,CAACH,UAAU,GAAG,mCAAmC,EAAEE,WAAW,EAAE;MAChGE,YAAY,EAAE,MAAM;MACpBW,OAAO,EAAE;KACV,CAAC;EACJ;EAEA;EACOC,oBAAoBA,CAACd,WAA6B;IACvD,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAC,IAAI,CAACH,UAAU,GAAG,iCAAiC,EAAEE,WAAW,EAAE;MACtFE,YAAY,EAAE;KACf,CAAC;EACJ;EAEA;EACOa,eAAeA,CAACf,WAA6B;IAClD,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAwB,IAAI,CAACH,UAAU,GAAG,gCAAgC,EAAEE,WAAW,CAAC;EAC/G;EAEA;EACOgB,aAAaA,CAAChB,WAA6B;IAChD,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAC,IAAI,CAACH,UAAU,GAAG,8BAA8B,EACpE;MACEmB,QAAQ,EAAEjB,WAAW,CAACkB,WAAW,EAAE;MACnCC,SAAS,EAAEnB,WAAW,CAACoB,YAAY;KACpC,EACD;MACElB,YAAY,EAAE;KACf,CAAC;EACN;;;uBA1DmBP,wBAAwB,EAAA0B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAxB7B,wBAAwB;MAAA8B,OAAA,EAAxB9B,wBAAwB,CAAA+B;IAAA;EAAA;;AA+D5C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}