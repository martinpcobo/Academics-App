{"ast":null,"code":"import _asyncToGenerator from \"/Users/martin.perez.cobo/Documents/Repositories/Academics-FrontEnd/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport UserController from \"../controllers/UserController\";\nimport User from \"../../models/User\";\nimport AuthenticationService from \"./AuthenticationService\";\nimport * as i0 from \"@angular/core\";\n// Define the service as injectable and include the AuthenticationController provider\nexport default class UserService {\n  constructor(user_controller, authentication_service) {\n    this.user_controller = user_controller;\n    this.authentication_service = authentication_service;\n  }\n  // ! Business Logic\n  // * Get all users\n  getUsers() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      return new Promise((resolve, reject) => {\n        _this.user_controller.getUsersList(_this.authentication_service.getToken()).subscribe({\n          next: users => {\n            console.log(users);\n            resolve(users.map(user => {\n              return new User(user);\n            }));\n          },\n          error: e => {\n            console.log(e);\n            resolve([]);\n          }\n        });\n      });\n    })();\n  }\n  // * Get a User by Id\n  getUserById(user_id) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      return new Promise((resolve, reject) => {\n        _this2.user_controller.getUserById(user_id, _this2.authentication_service.getToken()).subscribe({\n          next: user => {\n            resolve(new User(user));\n          },\n          error: e => {\n            resolve(e);\n          }\n        });\n      });\n    })();\n  }\n  // * [ADMIN] Modify existing user\n  modifyUser(user) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      return new Promise((resolve, reject) => {\n        _this3.user_controller.modifyUser(user, _this3.authentication_service.getToken()).subscribe({\n          next: res => {\n            console.log(\"SERVICE\");\n            console.log(user);\n            resolve(true);\n          },\n          error: e => {\n            resolve(false);\n          }\n        });\n      });\n    })();\n  }\n  // * [USER] Modify existing user\n  modifyUserSecure(user) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      return new Promise((resolve, reject) => {\n        _this4.user_controller.modifyUserSecure(user, _this4.authentication_service.getToken()).subscribe({\n          next: res => {\n            resolve(true);\n          },\n          error: e => {\n            resolve(false);\n          }\n        });\n      });\n    })();\n  }\n  // * Delete user\n  deleteUser(user_id) {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      return new Promise((resolve, reject) => {\n        _this5.user_controller.deleteUser(user_id, _this5.authentication_service.getToken()).subscribe({\n          next: res => {\n            resolve(true);\n          },\n          error: e => {\n            resolve(false);\n          }\n        });\n      });\n    })();\n  }\n  // * Create user\n  createUser(user, password) {\n    var _this6 = this;\n    return _asyncToGenerator(function* () {\n      return new Promise((resolve, reject) => {\n        _this6.user_controller.createUser(user, password, _this6.authentication_service.getToken()).subscribe({\n          next: user_instance => {\n            resolve(new User(user_instance));\n          },\n          error: e => {\n            reject(e);\n          }\n        });\n      });\n    })();\n  }\n  static {\n    this.ɵfac = function UserService_Factory(t) {\n      return new (t || UserService)(i0.ɵɵinject(UserController), i0.ɵɵinject(AuthenticationService));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: UserService,\n      factory: UserService.ɵfac\n    });\n  }\n}","map":{"version":3,"names":["UserController","User","AuthenticationService","UserService","constructor","user_controller","authentication_service","getUsers","_this","_asyncToGenerator","Promise","resolve","reject","getUsersList","getToken","subscribe","next","users","console","log","map","user","error","e","getUserById","user_id","_this2","modifyUser","_this3","res","modifyUserSecure","_this4","deleteUser","_this5","createUser","password","_this6","user_instance","i0","ɵɵinject","factory","ɵfac"],"sources":["/Users/martin.perez.cobo/Documents/Repositories/Academics-FrontEnd/src/app/services/UserService.ts"],"sourcesContent":["import {Injectable} from \"@angular/core\";\nimport UserController from \"../controllers/UserController\";\nimport User from \"../../models/User\";\nimport AuthenticationService from \"./AuthenticationService\";\n\n// Define the service as injectable and include the AuthenticationController provider\n@Injectable()\nexport default class UserService {\n  constructor(\n    private user_controller: UserController,\n    private authentication_service: AuthenticationService\n  ) {\n  }\n\n  // ! Business Logic\n\n  // * Get all users\n  public async getUsers(): Promise<User[]> {\n    return new Promise<User[]>((resolve, reject) => {\n      this.user_controller.getUsersList(this.authentication_service.getToken()).subscribe({\n        next: (users: User[]) => {\n          console.log(users);\n          resolve(users.map((user: Object) => {\n            return new User(user as User);\n          }));\n        },\n        error: (e) => {\n          console.log(e);\n          resolve([]);\n        }\n      });\n    });\n  }\n\n  // * Get a User by Id\n  public async getUserById(user_id: String): Promise<User> {\n    return new Promise<User>((resolve, reject) => {\n      this.user_controller.getUserById(user_id, this.authentication_service.getToken()).subscribe({\n        next: (user: User) => {\n          resolve(new User(user as User));\n        },\n        error: (e) => {\n          resolve(e);\n        }\n      });\n    });\n  }\n\n  // * [ADMIN] Modify existing user\n  public async modifyUser(user: User): Promise<boolean> {\n    return new Promise<boolean>((resolve, reject) => {\n      this.user_controller.modifyUser(user, this.authentication_service.getToken()).subscribe({\n        next: (res: String) => {\n          console.log(\"SERVICE\");\n          console.log(user);\n          resolve(true);\n        },\n        error: (e) => {\n          resolve(false);\n        }\n      });\n    });\n  }\n\n  // * [USER] Modify existing user\n  public async modifyUserSecure(user: User): Promise<boolean> {\n    return new Promise<boolean>((resolve, reject) => {\n      this.user_controller.modifyUserSecure(user, this.authentication_service.getToken()).subscribe({\n        next: (res: String) => {\n          resolve(true);\n        },\n        error: (e) => {\n          resolve(false);\n        }\n      });\n    });\n  }\n\n  // * Delete user\n  public async deleteUser(user_id: String): Promise<boolean> {\n    return new Promise<boolean>((resolve, reject) => {\n      this.user_controller.deleteUser(user_id, this.authentication_service.getToken()).subscribe({\n        next: (res: String) => {\n          resolve(true);\n        },\n        error: (e) => {\n          resolve(false);\n        }\n      });\n    });\n  }\n\n  // * Create user\n  public async createUser(user: User, password: String): Promise<User> {\n    return new Promise<User>((resolve, reject) => {\n      this.user_controller.createUser(user, password, this.authentication_service.getToken()).subscribe({\n        next: (user_instance: Object) => {\n          resolve(new User(user_instance as User));\n        },\n        error: (e) => {\n          reject(e);\n        }\n      });\n    });\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}