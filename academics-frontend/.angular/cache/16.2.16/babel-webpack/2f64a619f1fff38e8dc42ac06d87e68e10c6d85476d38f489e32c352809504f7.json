{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class CollapseNavbarDirective {\n  constructor(element) {\n    this.element = element;\n  }\n  onMouseEnter() {\n    this.collapseNavbar(false);\n  }\n  onMouseLeave() {\n    this.collapseNavbar(true);\n  }\n  collapseNavbar(collapsed) {\n    if (collapsed) {\n      this.element.nativeElement.classList.remove('navbar-not-collapsed');\n      this.element.nativeElement.classList.add('navbar-collapsed');\n    } else {\n      this.element.nativeElement.classList.remove('navbar-collapsed');\n      this.element.nativeElement.classList.add('navbar-not-collapsed');\n    }\n  }\n  static {\n    this.ɵfac = function CollapseNavbarDirective_Factory(t) {\n      return new (t || CollapseNavbarDirective)(i0.ɵɵdirectiveInject(i0.ElementRef));\n    };\n  }\n  static {\n    this.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n      type: CollapseNavbarDirective,\n      selectors: [[\"\", \"navbarCollapseDirective\", \"\"]],\n      hostBindings: function CollapseNavbarDirective_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"mouseenter\", function CollapseNavbarDirective_mouseenter_HostBindingHandler() {\n            return ctx.onMouseEnter();\n          })(\"mouseleave\", function CollapseNavbarDirective_mouseleave_HostBindingHandler() {\n            return ctx.onMouseLeave();\n          });\n        }\n      }\n    });\n  }\n}","map":{"version":3,"names":["CollapseNavbarDirective","constructor","element","onMouseEnter","collapseNavbar","onMouseLeave","collapsed","nativeElement","classList","remove","add","i0","ɵɵdirectiveInject","ElementRef","selectors","hostBindings","CollapseNavbarDirective_HostBindings","rf","ctx","CollapseNavbarDirective_mouseleave_HostBindingHandler"],"sources":["/Users/martin.perez.cobo/Documents/Repositories/Academics-FrontEnd/src/app/modules/dashboard/directives/CollapseNavbarDirective.ts"],"sourcesContent":["import {Directive, ElementRef, HostListener} from \"@angular/core\";\n\n@Directive({\n  selector: '[navbarCollapseDirective]'\n})\nexport class CollapseNavbarDirective {\n  constructor(private element: ElementRef) {\n\n  }\n\n  @HostListener('mouseenter') onMouseEnter() {\n    this.collapseNavbar(false);\n  }\n\n  @HostListener('mouseleave') onMouseLeave() {\n    this.collapseNavbar(true);\n  }\n\n  private collapseNavbar(collapsed: boolean) {\n    if (collapsed) {\n      this.element.nativeElement.classList.remove('navbar-not-collapsed');\n      this.element.nativeElement.classList.add('navbar-collapsed');\n    } else {\n      this.element.nativeElement.classList.remove('navbar-collapsed');\n      this.element.nativeElement.classList.add('navbar-not-collapsed');\n    }\n  }\n}\n"],"mappings":";AAKA,OAAM,MAAOA,uBAAuB;EAClCC,YAAoBC,OAAmB;IAAnB,KAAAA,OAAO,GAAPA,OAAO;EAE3B;EAE4BC,YAAYA,CAAA;IACtC,IAAI,CAACC,cAAc,CAAC,KAAK,CAAC;EAC5B;EAE4BC,YAAYA,CAAA;IACtC,IAAI,CAACD,cAAc,CAAC,IAAI,CAAC;EAC3B;EAEQA,cAAcA,CAACE,SAAkB;IACvC,IAAIA,SAAS,EAAE;MACb,IAAI,CAACJ,OAAO,CAACK,aAAa,CAACC,SAAS,CAACC,MAAM,CAAC,sBAAsB,CAAC;MACnE,IAAI,CAACP,OAAO,CAACK,aAAa,CAACC,SAAS,CAACE,GAAG,CAAC,kBAAkB,CAAC;KAC7D,MAAM;MACL,IAAI,CAACR,OAAO,CAACK,aAAa,CAACC,SAAS,CAACC,MAAM,CAAC,kBAAkB,CAAC;MAC/D,IAAI,CAACP,OAAO,CAACK,aAAa,CAACC,SAAS,CAACE,GAAG,CAAC,sBAAsB,CAAC;;EAEpE;;;uBArBWV,uBAAuB,EAAAW,EAAA,CAAAC,iBAAA,CAAAD,EAAA,CAAAE,UAAA;IAAA;EAAA;;;YAAvBb,uBAAuB;MAAAc,SAAA;MAAAC,YAAA,WAAAC,qCAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;;mBAAvBC,GAAA,CAAAf,YAAA,EAAc;UAAA,0BAAAgB,sDAAA;YAAA,OAAdD,GAAA,CAAAb,YAAA,EAAc;UAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}