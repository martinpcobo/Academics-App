{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport default class UserController {\n  // ! Constructor\n  constructor(http) {\n    this.http = http;\n    // ! Attributes\n    this.server_url = 'http://localhost:8080';\n  }\n  // ! User Requests\n  // * Get a user by id\n  getUserById(user_id, token) {\n    return this.http.get(this.server_url + '/api/user/' + user_id, {\n      headers: {\n        'Authentication': 'Bearer ' + token\n      }\n    });\n  }\n  // * Get all Users\n  getUsersList(token) {\n    return this.http.get(this.server_url + '/api/user/', {\n      headers: {\n        'Authentication': 'Bearer ' + token\n      }\n    });\n  }\n  // * [USER] Modify an existing user\n  modifyUserSecure(user, token) {\n    return this.http.put(this.server_url + '/api/user/' + user.getIdentifier(), user, {\n      headers: {\n        'Authentication': 'Bearer ' + token\n      },\n      responseType: 'text'\n    });\n  }\n  // * [ADMIN] Modify an existing user\n  modifyUser(user, token) {\n    return this.http.put(this.server_url + '/api/user/' + user.getIdentifier() + '/admin', user, {\n      headers: {\n        'Authentication': 'Bearer ' + token\n      },\n      responseType: 'text'\n    });\n  }\n  // * Delete user\n  deleteUser(user_id, token) {\n    return this.http.delete(this.server_url + '/api/user/' + user_id, {\n      headers: {\n        'Authentication': 'Bearer ' + token\n      },\n      responseType: 'text'\n    });\n  }\n  // * Create user\n  createUser(user, password, token) {\n    return this.http.post(this.server_url + '/api/user/', {\n      ...user,\n      credential: {\n        password: password\n      }\n    }, {\n      headers: {\n        'Authentication': 'Bearer ' + token\n      }\n    });\n  }\n  static {\n    this.ɵfac = function UserController_Factory(t) {\n      return new (t || UserController)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: UserController,\n      factory: UserController.ɵfac\n    });\n  }\n}","map":{"version":3,"names":["UserController","constructor","http","server_url","getUserById","user_id","token","get","headers","getUsersList","modifyUserSecure","user","put","getIdentifier","responseType","modifyUser","deleteUser","delete","createUser","password","post","credential","i0","ɵɵinject","i1","HttpClient","factory","ɵfac"],"sources":["/Users/martin.perez.cobo/Documents/Repositories/Academics-FrontEnd/src/app/controllers/UserController.ts"],"sourcesContent":["import {Injectable} from \"@angular/core\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\nimport User from \"../../models/User\";\n\n@Injectable()\nexport default class UserController {\n  // ! Attributes\n  private server_url: String = 'http://localhost:8080';\n\n  // ! Constructor\n  public constructor(private http: HttpClient) {\n  }\n\n  // ! User Requests\n  // * Get a user by id\n  public getUserById(user_id: String, token: String | null): Observable<User> {\n    return this.http.get<User>(this.server_url + '/api/user/' + user_id, {\n      headers: {\n        'Authentication': 'Bearer ' + token,\n      }\n    });\n  }\n\n  // * Get all Users\n  public getUsersList(token: String | null): Observable<User[]> {\n    return this.http.get<User[]>(this.server_url + '/api/user/', {\n      headers: {\n        'Authentication': 'Bearer ' + token,\n      }\n    });\n  }\n\n  // * [USER] Modify an existing user\n\n  public modifyUserSecure(user: User, token: String | null): Observable<String> {\n    return this.http.put(this.server_url + '/api/user/' + user.getIdentifier(), user, {\n      headers: {\n        'Authentication': 'Bearer ' + token,\n      },\n      responseType: 'text'\n    });\n  }\n\n  // * [ADMIN] Modify an existing user\n\n  public modifyUser(user: User, token: String | null): Observable<String> {\n    return this.http.put(this.server_url + '/api/user/' + user.getIdentifier() + '/admin', user, {\n      headers: {\n        'Authentication': 'Bearer ' + token,\n      },\n      responseType: 'text'\n    });\n  }\n\n  // * Delete user\n  public deleteUser(user_id: String, token: String | null): Observable<String> {\n    return this.http.delete(this.server_url + '/api/user/' + user_id, {\n      headers: {\n        'Authentication': 'Bearer ' + token,\n      },\n      responseType: 'text'\n    });\n  }\n\n  // * Create user\n  public createUser(user: User, password: String, token: String | null): Observable<User> {\n    return this.http.post<User>(this.server_url + '/api/user/', {\n      ...user,\n      credential: {\n        password: password\n      }\n    }, {\n      headers: {\n        'Authentication': 'Bearer ' + token,\n      }\n    });\n  }\n}\n"],"mappings":";;AAMA,eAAc,MAAOA,cAAc;EAIjC;EACAC,YAA2BC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAJ/B;IACQ,KAAAC,UAAU,GAAW,uBAAuB;EAIpD;EAEA;EACA;EACOC,WAAWA,CAACC,OAAe,EAAEC,KAAoB;IACtD,OAAO,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAO,IAAI,CAACJ,UAAU,GAAG,YAAY,GAAGE,OAAO,EAAE;MACnEG,OAAO,EAAE;QACP,gBAAgB,EAAE,SAAS,GAAGF;;KAEjC,CAAC;EACJ;EAEA;EACOG,YAAYA,CAACH,KAAoB;IACtC,OAAO,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAS,IAAI,CAACJ,UAAU,GAAG,YAAY,EAAE;MAC3DK,OAAO,EAAE;QACP,gBAAgB,EAAE,SAAS,GAAGF;;KAEjC,CAAC;EACJ;EAEA;EAEOI,gBAAgBA,CAACC,IAAU,EAAEL,KAAoB;IACtD,OAAO,IAAI,CAACJ,IAAI,CAACU,GAAG,CAAC,IAAI,CAACT,UAAU,GAAG,YAAY,GAAGQ,IAAI,CAACE,aAAa,EAAE,EAAEF,IAAI,EAAE;MAChFH,OAAO,EAAE;QACP,gBAAgB,EAAE,SAAS,GAAGF;OAC/B;MACDQ,YAAY,EAAE;KACf,CAAC;EACJ;EAEA;EAEOC,UAAUA,CAACJ,IAAU,EAAEL,KAAoB;IAChD,OAAO,IAAI,CAACJ,IAAI,CAACU,GAAG,CAAC,IAAI,CAACT,UAAU,GAAG,YAAY,GAAGQ,IAAI,CAACE,aAAa,EAAE,GAAG,QAAQ,EAAEF,IAAI,EAAE;MAC3FH,OAAO,EAAE;QACP,gBAAgB,EAAE,SAAS,GAAGF;OAC/B;MACDQ,YAAY,EAAE;KACf,CAAC;EACJ;EAEA;EACOE,UAAUA,CAACX,OAAe,EAAEC,KAAoB;IACrD,OAAO,IAAI,CAACJ,IAAI,CAACe,MAAM,CAAC,IAAI,CAACd,UAAU,GAAG,YAAY,GAAGE,OAAO,EAAE;MAChEG,OAAO,EAAE;QACP,gBAAgB,EAAE,SAAS,GAAGF;OAC/B;MACDQ,YAAY,EAAE;KACf,CAAC;EACJ;EAEA;EACOI,UAAUA,CAACP,IAAU,EAAEQ,QAAgB,EAAEb,KAAoB;IAClE,OAAO,IAAI,CAACJ,IAAI,CAACkB,IAAI,CAAO,IAAI,CAACjB,UAAU,GAAG,YAAY,EAAE;MAC1D,GAAGQ,IAAI;MACPU,UAAU,EAAE;QACVF,QAAQ,EAAEA;;KAEb,EAAE;MACDX,OAAO,EAAE;QACP,gBAAgB,EAAE,SAAS,GAAGF;;KAEjC,CAAC;EACJ;;;uBAvEmBN,cAAc,EAAAsB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAdzB,cAAc;MAAA0B,OAAA,EAAd1B,cAAc,CAAA2B;IAAA;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}