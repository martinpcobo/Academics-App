{"ast":null,"code":"import _asyncToGenerator from \"/Users/martin.perez.cobo/Documents/Repositories/Academics-FrontEnd/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { MAT_DIALOG_DATA, MatDialogModule } from \"@angular/material/dialog\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { FormControl, FormGroup, FormsModule, ReactiveFormsModule, Validators } from \"@angular/forms\";\nimport { AsyncPipe, NgFor, NgIf } from \"@angular/common\";\nimport ToastService, { ToastType } from \"../../../../../../services/ToastService\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { Class } from \"../../../../../../../models/Class\";\nimport { MatDatepickerModule } from \"@angular/material/datepicker\";\nimport { MatChipsModule } from \"@angular/material/chips\";\nimport { MatAutocompleteModule } from \"@angular/material/autocomplete\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { map, Observable, startWith } from \"rxjs\";\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { Student } from \"../../../../../../../models/Student\";\nimport StudentService from \"../../../../services/StudentService\";\nimport SubjectService from \"../../../../services/SubjectService\";\nimport { Grade } from \"../../../../../../../models/Grade\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"@angular/material/input\";\nimport * as i3 from \"@angular/material/form-field\";\nimport * as i4 from \"@angular/material/button\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/material/autocomplete\";\nimport * as i7 from \"@angular/material/core\";\nfunction GradeDialogComponent_mat_label_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-label\");\n    i0.ɵɵtext(1, \"New class creation\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction GradeDialogComponent_mat_label_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-label\");\n    i0.ɵɵtext(1, \"Existing class edition\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction GradeDialogComponent_mat_option_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-option\", 11);\n    i0.ɵɵlistener(\"click\", function GradeDialogComponent_mat_option_11_Template_mat_option_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const student_r7 = restoredCtx.$implicit;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.selected_student = student_r7);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const student_r7 = ctx.$implicit;\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵproperty(\"value\", (tmp_0_0 = student_r7.getUser()) == null ? null : tmp_0_0.getName());\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", (tmp_1_0 = student_r7.getUser()) == null ? null : tmp_1_0.getName(), \" \");\n  }\n}\nfunction GradeDialogComponent_mat_error_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Invalid grade \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction GradeDialogComponent_button_21_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function GradeDialogComponent_button_21_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.submitGradeCreation());\n    });\n    i0.ɵɵtext(1, \"Create \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", ctx_r5.grade_details.invalid);\n  }\n}\nfunction GradeDialogComponent_button_22_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function GradeDialogComponent_button_22_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.submitGradeEdit());\n    });\n    i0.ɵɵtext(1, \"Submit \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", ctx_r6.grade_details.invalid);\n  }\n}\nexport class GradeDialogComponent {\n  // ! Constructor\n  constructor(data, dialogRef, toast_service, student_service, subject_service) {\n    this.data = data;\n    this.dialogRef = dialogRef;\n    this.toast_service = toast_service;\n    this.student_service = student_service;\n    this.subject_service = subject_service;\n    // ! Attributes\n    this.grade_details = new FormGroup({\n      student: new FormControl(this.data.grade_instance?.getStudent(), [Validators.required]),\n      value: new FormControl(this.data.grade_instance?.getValue(), [Validators.required])\n    });\n    this.student_list = [];\n    this.filtered_students = new Observable();\n    this.selected_student = undefined;\n    this.separatorKeysCodes = [ENTER, COMMA];\n    this.ECGradeDialogMode = EGradeDialogMode;\n  }\n  // ! Business Logic\n  // * Dialog Methods\n  ngOnInit() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this.student_list = yield _this.student_service.getAllStudents();\n      _this.selected_student = _this.data.grade_instance?.getStudent();\n      _this.filtered_students = _this.grade_details.controls['student'].valueChanges.pipe(startWith(_this.data.grade_instance?.getStudent()), map(value => {\n        if (value) {\n          return _this.student_list.filter(student_ind => {\n            return student_ind.getUser()?.getName()?.includes(value.toString()) && _this.selected_student?.getIdentifier() != student_ind.getIdentifier();\n          });\n        } else {\n          return [];\n        }\n      }));\n    })();\n  }\n  submitGradeCreation() {\n    if (this.grade_details.invalid || this.grade_details.controls['student'].value.length == 0 || this.grade_details.controls['value'].value.length == 0 || this.selected_student == undefined) {\n      this.toast_service.setMessage(\"Missing information for grade creation\", ToastType.DANGER);\n      return;\n    }\n    let grade_instance = new Grade(this.data.grade_instance);\n    grade_instance.setValue(this.grade_details.controls['value'].value);\n    let student_instance = new Student(this.selected_student);\n    student_instance.setCourses([]);\n    student_instance.setGrades([]);\n    grade_instance.setStudent(student_instance);\n    let course_instance = new Class(this.data.course_instance);\n    course_instance.setProfessors([]);\n    course_instance.setStudents([]);\n    course_instance.setGrades([]);\n    grade_instance.setClass(course_instance);\n    this.dialogRef.close({\n      grade_instance\n    });\n  }\n  submitGradeEdit() {\n    if (this.grade_details.invalid || this.grade_details.controls['student'].value.length == 0 || this.grade_details.controls['value'].value.length == 0 || this.selected_student == undefined) {\n      this.toast_service.setMessage(\"Missing information for grade creation\", ToastType.DANGER);\n      return;\n    }\n    let grade_instance = new Grade(this.data.grade_instance);\n    grade_instance.setValue(this.grade_details.controls['value'].value);\n    grade_instance.setStudent(this.selected_student);\n    let course_instance = new Class(this.data.course_instance);\n    course_instance.setProfessors([]);\n    course_instance.setStudents([]);\n    course_instance.setGrades([]);\n    grade_instance.setClass(course_instance);\n    this.dialogRef.close({\n      grade_instance\n    });\n  }\n  cancelResponse() {\n    this.dialogRef.close(null);\n  }\n  static {\n    this.ɵfac = function GradeDialogComponent_Factory(t) {\n      return new (t || GradeDialogComponent)(i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(ToastService), i0.ɵɵdirectiveInject(StudentService), i0.ɵɵdirectiveInject(SubjectService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: GradeDialogComponent,\n      selectors: [[\"app-user-dialog\"]],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 23,\n      vars: 10,\n      consts: [[\"mat-dialog-content\", \"\"], [4, \"ngIf\"], [1, \"d-flex\", \"flex-column\", 3, \"formGroup\"], [\"aria-label\", \"Student\", \"formControlName\", \"student\", \"matInput\", \"\", \"placeholder\", \"Start typing...\", \"type\", \"text\", 3, \"matAutocomplete\"], [\"autoActiveFirstOption\", \"\"], [\"studentAutocomplete\", \"matAutocomplete\"], [3, \"value\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"matInput\", \"\", \"formControlName\", \"value\", \"required\", \"\"], [\"mat-dialog-actions\", \"\", 1, \"d-flex\", \"flex-row\", \"justify-content-end\"], [\"mat-button\", \"\", 3, \"click\"], [\"mat-button\", \"\", \"color\", \"primary\", 3, \"disabled\", \"click\", 4, \"ngIf\"], [3, \"value\", \"click\"], [\"mat-button\", \"\", \"color\", \"primary\", 3, \"disabled\", \"click\"]],\n      template: function GradeDialogComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\")(1, \"div\", 0);\n          i0.ɵɵtemplate(2, GradeDialogComponent_mat_label_2_Template, 2, 0, \"mat-label\", 1);\n          i0.ɵɵtemplate(3, GradeDialogComponent_mat_label_3_Template, 2, 0, \"mat-label\", 1);\n          i0.ɵɵelementStart(4, \"form\", 2)(5, \"mat-form-field\")(6, \"mat-label\");\n          i0.ɵɵtext(7, \"Student\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(8, \"input\", 3);\n          i0.ɵɵelementStart(9, \"mat-autocomplete\", 4, 5);\n          i0.ɵɵtemplate(11, GradeDialogComponent_mat_option_11_Template, 2, 2, \"mat-option\", 6);\n          i0.ɵɵpipe(12, \"async\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(13, \"mat-form-field\")(14, \"mat-label\");\n          i0.ɵɵtext(15, \"Value\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(16, \"input\", 7);\n          i0.ɵɵtemplate(17, GradeDialogComponent_mat_error_17_Template, 2, 0, \"mat-error\", 1);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(18, \"div\", 8)(19, \"button\", 9);\n          i0.ɵɵlistener(\"click\", function GradeDialogComponent_Template_button_click_19_listener() {\n            return ctx.cancelResponse();\n          });\n          i0.ɵɵtext(20, \"Cancel\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(21, GradeDialogComponent_button_21_Template, 2, 1, \"button\", 10);\n          i0.ɵɵtemplate(22, GradeDialogComponent_button_22_Template, 2, 1, \"button\", 10);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          const _r2 = i0.ɵɵreference(10);\n          let tmp_5_0;\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.data.DIALOG_MODE == ctx.ECGradeDialogMode.CREATE);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.data.DIALOG_MODE == ctx.ECGradeDialogMode.EDIT);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"formGroup\", ctx.grade_details);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"matAutocomplete\", _r2);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(12, 8, ctx.filtered_students));\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"ngIf\", (tmp_5_0 = ctx.grade_details.get(\"value\")) == null ? null : tmp_5_0.invalid);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngIf\", ctx.data.DIALOG_MODE == ctx.ECGradeDialogMode.CREATE);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.data.DIALOG_MODE == ctx.ECGradeDialogMode.EDIT);\n        }\n      },\n      dependencies: [MatDialogModule, i1.MatDialogContent, i1.MatDialogActions, MatInputModule, i2.MatInput, i3.MatFormField, i3.MatLabel, i3.MatError, MatButtonModule, i4.MatButton, ReactiveFormsModule, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.RequiredValidator, i5.FormGroupDirective, i5.FormControlName, NgIf, MatIconModule, MatDatepickerModule, MatChipsModule, MatAutocompleteModule, i6.MatAutocomplete, i7.MatOption, i6.MatAutocompleteTrigger, MatFormFieldModule, NgFor, FormsModule, AsyncPipe],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}\nexport var EGradeDialogMode;\n(function (EGradeDialogMode) {\n  EGradeDialogMode[EGradeDialogMode[\"CREATE\"] = 0] = \"CREATE\";\n  EGradeDialogMode[EGradeDialogMode[\"EDIT\"] = 1] = \"EDIT\";\n})(EGradeDialogMode || (EGradeDialogMode = {}));","map":{"version":3,"names":["MAT_DIALOG_DATA","MatDialogModule","MatInputModule","MatButtonModule","FormControl","FormGroup","FormsModule","ReactiveFormsModule","Validators","AsyncPipe","NgFor","NgIf","ToastService","ToastType","MatIconModule","Class","MatDatepickerModule","MatChipsModule","MatAutocompleteModule","MatFormFieldModule","map","Observable","startWith","COMMA","ENTER","Student","StudentService","SubjectService","Grade","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","GradeDialogComponent_mat_option_11_Template_mat_option_click_0_listener","restoredCtx","ɵɵrestoreView","_r9","student_r7","$implicit","ctx_r8","ɵɵnextContext","ɵɵresetView","selected_student","ɵɵproperty","tmp_0_0","getUser","getName","ɵɵadvance","ɵɵtextInterpolate1","tmp_1_0","GradeDialogComponent_button_21_Template_button_click_0_listener","_r11","ctx_r10","submitGradeCreation","ctx_r5","grade_details","invalid","GradeDialogComponent_button_22_Template_button_click_0_listener","_r13","ctx_r12","submitGradeEdit","ctx_r6","GradeDialogComponent","constructor","data","dialogRef","toast_service","student_service","subject_service","student","grade_instance","getStudent","required","value","getValue","student_list","filtered_students","undefined","separatorKeysCodes","ECGradeDialogMode","EGradeDialogMode","ngOnInit","_this","_asyncToGenerator","getAllStudents","controls","valueChanges","pipe","filter","student_ind","includes","toString","getIdentifier","length","setMessage","DANGER","setValue","student_instance","setCourses","setGrades","setStudent","course_instance","setProfessors","setStudents","setClass","close","cancelResponse","ɵɵdirectiveInject","i1","MatDialogRef","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","GradeDialogComponent_Template","rf","ctx","ɵɵtemplate","GradeDialogComponent_mat_label_2_Template","GradeDialogComponent_mat_label_3_Template","ɵɵelement","GradeDialogComponent_mat_option_11_Template","GradeDialogComponent_mat_error_17_Template","GradeDialogComponent_Template_button_click_19_listener","GradeDialogComponent_button_21_Template","GradeDialogComponent_button_22_Template","DIALOG_MODE","CREATE","EDIT","_r2","ɵɵpipeBind1","tmp_5_0","get","MatDialogContent","MatDialogActions","i2","MatInput","i3","MatFormField","MatLabel","MatError","i4","MatButton","i5","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","RequiredValidator","FormGroupDirective","FormControlName","i6","MatAutocomplete","i7","MatOption","MatAutocompleteTrigger","styles"],"sources":["/Users/martin.perez.cobo/Documents/Repositories/Academics-FrontEnd/src/app/modules/dashboard/components/class/class-details/grade-dialog/grade-dialog.component.ts","/Users/martin.perez.cobo/Documents/Repositories/Academics-FrontEnd/src/app/modules/dashboard/components/class/class-details/grade-dialog/grade-dialog.component.html"],"sourcesContent":["import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogModule, MatDialogRef} from \"@angular/material/dialog\";\nimport {MatInputModule} from \"@angular/material/input\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {FormControl, FormGroup, FormsModule, ReactiveFormsModule, Validators} from \"@angular/forms\";\nimport {AsyncPipe, NgFor, NgIf} from \"@angular/common\";\nimport ToastService, {ToastType} from \"../../../../../../services/ToastService\";\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {Class} from \"../../../../../../../models/Class\";\nimport {MatDatepickerModule} from \"@angular/material/datepicker\";\nimport {MatChipInputEvent, MatChipsModule} from \"@angular/material/chips\";\nimport {MatAutocompleteModule, MatAutocompleteSelectedEvent} from \"@angular/material/autocomplete\";\nimport {MatFormFieldModule} from \"@angular/material/form-field\";\nimport {map, Observable, startWith} from \"rxjs\";\nimport {COMMA, ENTER} from '@angular/cdk/keycodes';\nimport {Professor} from \"../../../../../../../models/Professor\";\nimport ProfessorService from \"../../../../services/ProfessorService\";\nimport {Student} from \"../../../../../../../models/Student\";\nimport StudentService from \"../../../../services/StudentService\";\nimport {Subject} from \"../../../../../../../models/Subject\";\nimport SubjectService from \"../../../../services/SubjectService\";\nimport {Grade} from \"../../../../../../../models/Grade\";\nimport {Course} from \"../../../../../../../models/Course\";\n\n@Component({\n  selector: 'app-user-dialog',\n  templateUrl: './grade-dialog.component.html',\n  styleUrls: ['./grade-dialog.component.scss'],\n  imports: [\n    MatDialogModule,\n    MatInputModule,\n    MatButtonModule,\n    ReactiveFormsModule,\n    NgIf,\n    MatIconModule,\n    MatDatepickerModule,\n    MatChipsModule,\n    MatAutocompleteModule,\n    MatFormFieldModule,\n    NgFor,\n    FormsModule,\n    MatFormFieldModule,\n    MatChipsModule,\n    NgFor,\n    MatIconModule,\n    MatAutocompleteModule,\n    ReactiveFormsModule,\n    AsyncPipe,\n  ],\n  standalone: true,\n})\n\nexport class GradeDialogComponent implements OnInit {\n  // ! Attributes\n  protected grade_details: FormGroup = new FormGroup({\n    student: new FormControl(this.data.grade_instance?.getStudent(), [Validators.required]),\n    value: new FormControl(this.data.grade_instance?.getValue(), [Validators.required]),\n  });\n\n  protected student_list: Student[] = [];\n  protected filtered_students: Observable<Student[]> = new Observable<Student[]>();\n  protected selected_student: Student | undefined = undefined;\n\n  protected separatorKeysCodes: number[] = [ENTER, COMMA];\n\n  // ! Constructor\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: IGradeDialogData,\n    protected dialogRef: MatDialogRef<GradeDialogComponent>,\n    protected toast_service: ToastService,\n    protected student_service: StudentService,\n    protected subject_service: SubjectService,\n  ) {\n  }\n\n  // ! Business Logic\n\n  // * Dialog Methods\n  async ngOnInit(): Promise<void> {\n    this.student_list = await this.student_service.getAllStudents();\n\n    this.selected_student = this.data.grade_instance?.getStudent();\n\n    this.filtered_students = this.grade_details.controls['student'].valueChanges.pipe(\n      startWith(this.data.grade_instance?.getStudent()),\n      map((value: String | null) => {\n          if (value) {\n            return this.student_list.filter((student_ind: Student) => {\n              return student_ind.getUser()?.getName()?.includes(value.toString()) && this.selected_student?.getIdentifier() != student_ind.getIdentifier();\n            });\n          } else {\n            return [];\n          }\n        }\n      )\n    );\n  }\n\n  protected submitGradeCreation(): void {\n    if (\n      this.grade_details.invalid ||\n      this.grade_details.controls['student'].value.length == 0 ||\n      this.grade_details.controls['value'].value.length == 0 ||\n      this.selected_student == undefined\n    ) {\n      this.toast_service.setMessage(\"Missing information for grade creation\", ToastType.DANGER);\n      return;\n    }\n\n    let grade_instance: Grade = new Grade(this.data.grade_instance);\n    grade_instance.setValue(this.grade_details.controls['value'].value);\n\n    let student_instance: Student = new Student(this.selected_student);\n    student_instance.setCourses([]);\n    student_instance.setGrades([]);\n    grade_instance.setStudent(student_instance);\n\n    let course_instance: Class = new Class(this.data.course_instance);\n    course_instance.setProfessors([]);\n    course_instance.setStudents([]);\n    course_instance.setGrades([]);\n\n    grade_instance.setClass(course_instance);\n\n    this.dialogRef.close({\n      grade_instance\n    });\n  }\n\n  protected submitGradeEdit(): void {\n    if (\n      this.grade_details.invalid ||\n      this.grade_details.controls['student'].value.length == 0 ||\n      this.grade_details.controls['value'].value.length == 0 ||\n      this.selected_student == undefined\n    ) {\n      this.toast_service.setMessage(\"Missing information for grade creation\", ToastType.DANGER);\n      return;\n    }\n\n    let grade_instance: Grade = new Grade(this.data.grade_instance);\n    grade_instance.setValue(this.grade_details.controls['value'].value);\n    grade_instance.setStudent(this.selected_student);\n\n    let course_instance: Class = new Class(this.data.course_instance);\n    course_instance.setProfessors([]);\n    course_instance.setStudents([]);\n    course_instance.setGrades([]);\n\n    grade_instance.setClass(course_instance);\n\n    this.dialogRef.close({\n      grade_instance\n    });\n  }\n\n  protected cancelResponse() {\n    this.dialogRef.close(null);\n  }\n\n  protected readonly ECGradeDialogMode = EGradeDialogMode;\n}\n\ninterface IGradeDialogData {\n  DIALOG_MODE: EGradeDialogMode,\n  grade_instance: Grade | undefined,\n  course_instance: Class | undefined\n}\n\nexport interface IGradeDialogResult {\n  grade_instance: Grade | undefined\n}\n\nexport enum EGradeDialogMode {\n  CREATE,\n  EDIT\n}\n","<div>\n  <div mat-dialog-content>\n    <mat-label *ngIf=\"this.data.DIALOG_MODE == ECGradeDialogMode.CREATE\">New class creation</mat-label>\n    <mat-label *ngIf=\"this.data.DIALOG_MODE == ECGradeDialogMode.EDIT\">Existing class edition</mat-label>\n\n    <form [formGroup]=\"this.grade_details\" class=\"d-flex flex-column\">\n      <!-- Student -->\n      <mat-form-field>\n        <mat-label>Student</mat-label>\n        <input\n          [matAutocomplete]=\"studentAutocomplete\"\n          aria-label=\"Student\"\n          formControlName=\"student\"\n          matInput\n          placeholder=\"Start typing...\"\n          type=\"text\"\n        >\n        <mat-autocomplete autoActiveFirstOption #studentAutocomplete=\"matAutocomplete\">\n          <mat-option\n            *ngFor=\"let student of this.filtered_students | async\"\n            [value]=\"student.getUser()?.getName()\"\n            (click)=\"this.selected_student = student;\"\n          >\n            {{student.getUser()?.getName()}}\n          </mat-option>\n        </mat-autocomplete>\n      </mat-form-field>\n\n      <!-- Value -->\n      <mat-form-field>\n        <mat-label>Value</mat-label>\n        <input matInput formControlName=\"value\" required>\n        <mat-error\n          *ngIf=\"this.grade_details.get('value')?.invalid\">Invalid grade\n        </mat-error>\n      </mat-form-field>\n    </form>\n  </div>\n  <div mat-dialog-actions class=\"d-flex flex-row justify-content-end\">\n    <button mat-button (click)=\"this.cancelResponse()\">Cancel</button>\n    <button *ngIf=\"this.data.DIALOG_MODE == ECGradeDialogMode.CREATE\" [disabled]=\"this.grade_details.invalid\"\n            mat-button\n            color=\"primary\"\n            (click)=\"this.submitGradeCreation()\">Create\n    </button>\n    <button *ngIf=\"this.data.DIALOG_MODE == ECGradeDialogMode.EDIT\" [disabled]=\"this.grade_details.invalid\"\n            mat-button\n            color=\"primary\"\n            (click)=\"this.submitGradeEdit()\">Submit\n    </button>\n  </div>\n</div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}