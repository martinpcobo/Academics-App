{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProfessorController {\n  // ! Constructors\n  constructor(http) {\n    this.http = http;\n    // ! Attributes\n    this.server_url = 'http://localhost:8080';\n  }\n  // ! Endpoints\n  // * Create Professor Profile\n  createProfessorProfile(user_id, token) {\n    return this.http.post(this.server_url + '/api/professor/' + user_id, {}, {\n      headers: {\n        'Authentication': 'Bearer ' + token\n      }\n    });\n  }\n  // * Delete Professor Profile\n  deleteProfessorProfile(professor_id, token) {\n    return this.http.delete(this.server_url + '/api/professor/' + professor_id, {\n      headers: {\n        'Authentication': 'Bearer ' + token\n      },\n      responseType: 'text'\n    });\n  }\n  // * Get all Professors\n  getAllProfessors(token) {\n    return this.http.get(this.server_url + '/api/professor/', {\n      headers: {\n        'Authentication': 'Bearer ' + token\n      }\n    });\n  }\n  // * Get a Professor\n  getProfessor(professor_id, token) {\n    return this.http.get(this.server_url + '/api/professor/' + professor_id, {\n      headers: {\n        'Authentication': 'Bearer ' + token\n      }\n    });\n  }\n  static {\n    this.ɵfac = function ProfessorController_Factory(t) {\n      return new (t || ProfessorController)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ProfessorController,\n      factory: ProfessorController.ɵfac\n    });\n  }\n}","map":{"version":3,"names":["ProfessorController","constructor","http","server_url","createProfessorProfile","user_id","token","post","headers","deleteProfessorProfile","professor_id","delete","responseType","getAllProfessors","get","getProfessor","i0","ɵɵinject","i1","HttpClient","factory","ɵfac"],"sources":["/Users/martin.perez.cobo/Documents/Repositories/Academics-FrontEnd/src/app/modules/dashboard/controllers/ProfessorController.ts"],"sourcesContent":["import {Injectable} from \"@angular/core\";\nimport {Observable} from \"rxjs\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {Professor} from \"../../../../models/Professor\";\n\n@Injectable()\nexport class ProfessorController {\n  // ! Attributes\n  private server_url: String = 'http://localhost:8080';\n\n  // ! Constructors\n  constructor(private http: HttpClient) {\n  }\n\n  // ! Endpoints\n\n  // * Create Professor Profile\n  public createProfessorProfile(user_id: String, token: String | null): Observable<Professor> {\n    return this.http.post<Professor>(this.server_url + '/api/professor/' + user_id, {}, {\n      headers: {\n        'Authentication': 'Bearer ' + token,\n      }\n    });\n  }\n\n  // * Delete Professor Profile\n  public deleteProfessorProfile(professor_id: String, token: String | null): Observable<String> {\n    return this.http.delete(this.server_url + '/api/professor/' + professor_id, {\n      headers: {\n        'Authentication': 'Bearer ' + token,\n      },\n      responseType: 'text'\n    });\n  }\n\n  // * Get all Professors\n  public getAllProfessors(token: String | null): Observable<Professor[]> {\n    return this.http.get<Professor[]>(this.server_url + '/api/professor/', {\n      headers: {\n        'Authentication': 'Bearer ' + token,\n      }\n    });\n  }\n\n  // * Get a Professor\n  public getProfessor(professor_id: String, token: String | null): Observable<Professor> {\n    return this.http.get<Professor>(this.server_url + '/api/professor/' + professor_id, {\n      headers: {\n        'Authentication': 'Bearer ' + token,\n      }\n    });\n  }\n}\n"],"mappings":";;AAMA,OAAM,MAAOA,mBAAmB;EAI9B;EACAC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAJxB;IACQ,KAAAC,UAAU,GAAW,uBAAuB;EAIpD;EAEA;EAEA;EACOC,sBAAsBA,CAACC,OAAe,EAAEC,KAAoB;IACjE,OAAO,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAY,IAAI,CAACJ,UAAU,GAAG,iBAAiB,GAAGE,OAAO,EAAE,EAAE,EAAE;MAClFG,OAAO,EAAE;QACP,gBAAgB,EAAE,SAAS,GAAGF;;KAEjC,CAAC;EACJ;EAEA;EACOG,sBAAsBA,CAACC,YAAoB,EAAEJ,KAAoB;IACtE,OAAO,IAAI,CAACJ,IAAI,CAACS,MAAM,CAAC,IAAI,CAACR,UAAU,GAAG,iBAAiB,GAAGO,YAAY,EAAE;MAC1EF,OAAO,EAAE;QACP,gBAAgB,EAAE,SAAS,GAAGF;OAC/B;MACDM,YAAY,EAAE;KACf,CAAC;EACJ;EAEA;EACOC,gBAAgBA,CAACP,KAAoB;IAC1C,OAAO,IAAI,CAACJ,IAAI,CAACY,GAAG,CAAc,IAAI,CAACX,UAAU,GAAG,iBAAiB,EAAE;MACrEK,OAAO,EAAE;QACP,gBAAgB,EAAE,SAAS,GAAGF;;KAEjC,CAAC;EACJ;EAEA;EACOS,YAAYA,CAACL,YAAoB,EAAEJ,KAAoB;IAC5D,OAAO,IAAI,CAACJ,IAAI,CAACY,GAAG,CAAY,IAAI,CAACX,UAAU,GAAG,iBAAiB,GAAGO,YAAY,EAAE;MAClFF,OAAO,EAAE;QACP,gBAAgB,EAAE,SAAS,GAAGF;;KAEjC,CAAC;EACJ;;;uBA7CWN,mBAAmB,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAnBnB,mBAAmB;MAAAoB,OAAA,EAAnBpB,mBAAmB,CAAAqB;IAAA;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}