{"ast":null,"code":"import _asyncToGenerator from \"/Users/martin.perez.cobo/Documents/Repositories/Academics-FrontEnd/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport AuthenticationService from \"../../../services/AuthenticationService\";\nimport { Professor } from \"../../../../models/Professor\";\nimport User from \"../../../../models/User\";\nimport { Course } from \"../../../../models/Course\";\nimport UserService from \"../../../services/UserService\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../controllers/ProfessorController\";\nexport default class ProfessorService {\n  constructor(professor_controller, authentication_service, user_service) {\n    this.professor_controller = professor_controller;\n    this.authentication_service = authentication_service;\n    this.user_service = user_service;\n  }\n  // ! Business Logic\n  // * Create Professor Profile\n  createProfessorProfile(user_id) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      return new Promise((resolve, reject) => {\n        _this.professor_controller.createProfessorProfile(user_id, _this.authentication_service.getToken()).subscribe({\n          next: professor => {\n            resolve(true);\n          },\n          error: error => {\n            resolve(false);\n          }\n        });\n      });\n    })();\n  }\n  // * Delete Professor Profile\n  deleteProfessorProfile(professor_id) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      return new Promise((resolve, reject) => {\n        _this2.professor_controller.deleteProfessorProfile(professor_id, _this2.authentication_service.getToken()).subscribe({\n          next: professor => {\n            resolve(true);\n          },\n          error: error => {\n            resolve(false);\n          }\n        });\n      });\n    })();\n  }\n  // * Get all Professors\n  getAllProfessors() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      return new Promise((resolve, reject) => {\n        console.log(_this3.authentication_service.getToken());\n        _this3.professor_controller.getAllProfessors(_this3.authentication_service.getToken()).subscribe({\n          next: professors => {\n            resolve(professors.map(professor => {\n              let professor_instance = new Professor(professor);\n              professor_instance.setUser(new User(professor.user));\n              professor_instance.setCourses(professor.courses.map(course_obj => {\n                return new Course(course_obj);\n              }));\n              return professor_instance;\n            }));\n          },\n          error: error => {\n            resolve([]);\n          }\n        });\n      });\n    })();\n  }\n  // * Get a Professor\n  getProfessor(professor_id) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      return new Promise((resolve, reject) => {\n        _this4.professor_controller.getProfessor(professor_id, _this4.authentication_service.getToken()).subscribe({\n          next: professor => {\n            let professor_instance = new Professor(professor);\n            professor_instance.setCourses(professor.courses.map(course_obj => {\n              return new Course(course_obj);\n            }));\n            professor_instance.setUser(new User(professor.user));\n            resolve(professor_instance);\n          },\n          error: error => {\n            resolve(error);\n          }\n        });\n      });\n    })();\n  }\n  static {\n    this.ɵfac = function ProfessorService_Factory(t) {\n      return new (t || ProfessorService)(i0.ɵɵinject(i1.ProfessorController), i0.ɵɵinject(AuthenticationService), i0.ɵɵinject(UserService));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ProfessorService,\n      factory: ProfessorService.ɵfac\n    });\n  }\n}","map":{"version":3,"names":["AuthenticationService","Professor","User","Course","UserService","ProfessorService","constructor","professor_controller","authentication_service","user_service","createProfessorProfile","user_id","_this","_asyncToGenerator","Promise","resolve","reject","getToken","subscribe","next","professor","error","deleteProfessorProfile","professor_id","_this2","getAllProfessors","_this3","console","log","professors","map","professor_instance","setUser","user","setCourses","courses","course_obj","getProfessor","_this4","i0","ɵɵinject","i1","ProfessorController","factory","ɵfac"],"sources":["/Users/martin.perez.cobo/Documents/Repositories/Academics-FrontEnd/src/app/modules/dashboard/services/ProfessorService.ts"],"sourcesContent":["import {Injectable} from \"@angular/core\";\nimport AuthenticationService from \"../../../services/AuthenticationService\";\nimport {ProfessorController} from \"../controllers/ProfessorController\";\nimport {Professor} from \"../../../../models/Professor\";\nimport User from \"../../../../models/User\";\nimport {Course} from \"../../../../models/Course\";\nimport UserService from \"../../../services/UserService\";\n\n@Injectable()\nexport default class ProfessorService {\n  constructor(\n    private professor_controller: ProfessorController,\n    private authentication_service: AuthenticationService,\n    private user_service: UserService\n  ) {\n  }\n\n  // ! Business Logic\n\n  // * Create Professor Profile\n  public async createProfessorProfile(user_id: String): Promise<boolean> {\n    return new Promise<boolean>((resolve, reject) => {\n      this.professor_controller.createProfessorProfile(user_id, this.authentication_service.getToken()).subscribe({\n        next: (professor: any) => {\n          resolve(true);\n        },\n        error: (error: any) => {\n          resolve(false);\n        },\n      });\n    })\n  }\n\n  // * Delete Professor Profile\n  public async deleteProfessorProfile(professor_id: String): Promise<boolean> {\n    return new Promise<boolean>((resolve, reject) => {\n      this.professor_controller.deleteProfessorProfile(professor_id, this.authentication_service.getToken()).subscribe({\n        next: (professor: any) => {\n          resolve(true);\n        },\n        error: (error: any) => {\n          resolve(false);\n        },\n      });\n    })\n  }\n\n  // * Get all Professors\n  public async getAllProfessors(): Promise<Professor[]> {\n    return new Promise<Professor[]>((resolve, reject) => {\n      console.log(this.authentication_service.getToken());\n      this.professor_controller.getAllProfessors(this.authentication_service.getToken()).subscribe({\n        next: (professors: Object[]) => {\n          resolve(professors.map((professor: any) => {\n            let professor_instance: Professor = new Professor(professor as Professor);\n            professor_instance.setUser(new User(professor.user as User));\n            professor_instance.setCourses(professor.courses.map((course_obj: Object) => {\n              return new Course(course_obj as Course);\n            }))\n\n            return professor_instance;\n          }))\n        },\n        error: (error: any) => {\n          resolve([])\n        },\n      });\n    })\n  }\n\n  // * Get a Professor\n  public async getProfessor(professor_id: String): Promise<Professor> {\n    return new Promise<Professor>((resolve, reject) => {\n      this.professor_controller.getProfessor(professor_id, this.authentication_service.getToken()).subscribe({\n        next: (professor: any) => {\n          let professor_instance: Professor = new Professor(professor as Professor);\n          professor_instance.setCourses(professor.courses.map((course_obj: Object) => {\n            return new Course(course_obj as Course);\n          }));\n\n          professor_instance.setUser(new User(professor.user as User));\n          resolve(professor_instance);\n        },\n        error: (error: any) => {\n          resolve(error);\n        },\n      });\n    })\n  }\n\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}